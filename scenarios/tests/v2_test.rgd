# v2_test.rgd
# v2設計の新機能をテストするサンプルスクリプト

# === v2新機能: 定義ステートメント ===

# キャラクター定義 (v2新構文)
character y = Character("優子", name_color="#c8ffc8", show_callback="yuko_mouth_start", hide_callback="yuko_mouth_stop", type_speed_cps=25.0)
character s = Character("Saitos", name_color="#ffc8c8", show_callback="saitos_callback", type_speed_cps=30.0)

# 画像定義 (静止画)
image yuko happy = "res://images/yuko_happy.png"
image yuko normal = "res://images/yuko_normal.png"
image yuko sad = "res://images/yuko_sad.png"
image bg school = "res://bg/school.jpg"
image bg classroom = "res://bg/classroom.jpg"

# 画像定義 (アニメーション)
image yuko idle:
    "res://images/yuko_idle_1.png"
    0.5
    "res://images/yuko_idle_2.png"
    0.5
    loop

# オーディオ定義
audio town_bgm = "res://bgm/town.ogg"
audio school_bgm = "res://bgm/school.ogg" 
audio door_open = "res://se/door_open.wav"
audio footsteps = "res://se/footsteps.wav"

# シェーダー定義
shader sepia_effect = "res://shaders/sepia.gdshader"
shader blur_effect = "res://shaders/blur.gdshader"

# === メインシナリオ ===

label v2_test_start:
    "🚀 v2設計の新機能テストを開始します！"
    
    # v2: 変数展開構文 [variable] vs インラインタグ構文 {tag} (将来実装)
    set player_name = "テストプレイヤー"
    "プレイヤー名: [player_name]"
    
    # v2: 新しい定義システムを使った背景表示
    scene bg school with fade
    "学校の背景が表示されました（v2定義システム使用）"
    
    # v2: 新しいキャラクター定義を使った表示
    show y happy at center with dissolve
    y "こんにちは！私は新しいv2システムで定義されたキャラクターです。"
    
    show s normal at left
    s "僕も新しいCharacter()定義で作られました。"
    s "name_colorやコールバック機能もサポートしています！"
    
    menu:
        "v2新機能のテストを続ける":
            jump test_definitions
        "v1との互換性をテスト":
            jump test_compatibility
        "システム終了":
            jump test_end

label test_definitions:
    "📊 v2定義システムのテストです"
    
    # アニメーション画像のテスト (将来実装)
    # show y idle at center
    # y "アニメーション表示のテスト予定です"
    
    # 複数キャラクター表示テスト
    show y happy at right
    show s happy at left
    
    y "二人同時に表示されています！"
    s "v2システムの統合管理によるものです。"
    
    # 背景変更テスト
    scene bg classroom with dissolve
    
    y "教室に移動しました。"
    s "シーン変更もスムーズですね。"
    
    jump test_end

label test_compatibility:
    "🔄 v1互換性テスト"
    
    # v1スタイルのdefine文もサポート継続
    define old_char = Character("res://characters/old_style.tres")
    
    "v1のdefine文も引き続き動作します。"
    "これにより既存プロジェクトの移行が容易になります。"
    
    jump test_end

label test_end:
    hide y with fade
    hide s with fade
    
    "✅ v2システムのテストが完了しました！"
    "主な新機能:"
    "• 単一オートロード(AdvSystem)による統合管理"
    "• character, image, audio, shader定義ステートメント"
    "• レイヤーマッピングシステム"
    "• 統一初期化フレームワーク"
    
    "🎉 v2への移行が成功しました！"