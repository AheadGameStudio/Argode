# Temporary Screenshot Test - 一時スクリーンショット機能のテスト
# メニューを開く前にスクリーンショットを撮影して、セーブ時に使用する

[test_start]
set test_mode "一時スクリーンショット機能"
narrator "一時スクリーンショット機能をテストします。"

[setup_scene]
# 特徴的なシーンを作成（スクリーンショットで確認しやすいように）
scene bg001
show yuko happy center
narrator "シーンを設定しました。ユーコちゃんが笑顔で登場！"
yuko "こんにちは！これが一時スクリーンショットのテストです。"

[capture_temp_screenshot]
narrator "今からメニューを開く前に、現在の画面を一時保存します。"
# 一時スクリーンショットを撮影
capture
narrator "一時スクリーンショットを撮影しました！"

[change_scene_for_menu_simulation]
# メニューを開いたと仮定して、シーンを変更
scene bg002
hide yuko
show saitos normal right
narrator "メニューが開かれた状態をシミュレーション（違う背景・キャラ）"
saitos "今、メニュー画面が表示されていると仮定します。"

[test_save_with_temp_screenshot]
narrator "この状態でセーブを実行します。"
narrator "一時スクリーンショットがある場合、メニュー前の画面が保存されるはずです。"
save 1 "一時スクショテスト"
narrator "セーブ完了！一時スクリーンショット（ユーコちゃんの画面）が使われたはずです。"

[test_save_without_temp_screenshot]
narrator "今度は一時スクリーンショットなしでセーブしてみます。"
narrator "現在の画面（サイトスくんの画面）がそのまま保存されるはずです。"
save 2 "リアルタイムスクショテスト"
narrator "セーブ完了！今度はリアルタイムスクリーンショットが使われたはずです。"

[test_temp_screenshot_expiration]
narrator "一時スクリーンショットの有効期限（5分）もテストできますが、"
narrator "実際の開発では時間が長いので、ここでは省略します。"

[load_test]
narrator "セーブしたデータをロードしてテストします。"
load 1
narrator "スロット1からロードしました。一時スクリーンショット機能が正常に動作していれば、"
narrator "セーブ時には一時保存された画面（ユーコちゃん）がサムネイルになっているはずです。"

[end_test]
narrator "一時スクリーンショット機能のテストが完了しました！"
narrator "以下の機能がテストされました："
narrator "1. capture コマンドで一時スクリーンショット撮影"
narrator "2. セーブ時に一時スクショを優先使用"
narrator "3. 一時スクショがない場合のリアルタイム撮影"
narrator "4. セーブ後の一時スクショ自動削除"
narrator "コンソールログでスクリーンショットの動作を確認してください。"
