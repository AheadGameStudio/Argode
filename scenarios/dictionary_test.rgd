# 辞書型変数機能のテストシナリオ

# 基本的な変数設定
set simple_var "Hello World"
log "基本変数: {simple_var}"

# 辞書リテラルの設定（配列に保存してから変数に設定）
set_dict player {"name": "主人公", "level": 1, "hp": 100}
log "プレイヤー名: {player.name}"
log "プレイヤーレベル: {player.level}"
log "プレイヤーHP: {player.hp}"

# ネストした辞書
set_dict story_flags {"chapter1": {"intro": false, "boss_defeated": false}, "chapter2": {"started": false}}
log "Chapter1 Intro: {story_flags.chapter1.intro}"

# 配列の設定
set_array inventory ["sword", "potion", "key"]
log "インベントリ: {inventory[0]}, {inventory[1]}, {inventory[2]}"

# フラグ管理のテスト
log "=== フラグ管理テスト ==="
set_flag tutorial_complete true
log "チュートリアル完了: {tutorial_complete}"

# グループ化されたフラグ
set_dict flags {"story": {"chapter1_complete": true, "chapter2_complete": false}, "achievements": {"first_battle": true}}
log "Chapter1完了: {flags.story.chapter1_complete}"
log "初戦闘実績: {flags.achievements.first_battle}"

# 動的な変数操作
set player.experience 250
log "プレイヤー経験値: {player.experience}"

# 条件分岐での使用
if {player.level} >= 1
    log "レベル1以上です"
end

if {flags.story.chapter1_complete}
    log "Chapter1が完了しています"
else
    log "Chapter1はまだ未完了です"
end

# 配列要素の条件チェック
if "{inventory[0]}" == "sword"
    log "剣を持っています"
end

log "=== 辞書型テスト完了 ==="
