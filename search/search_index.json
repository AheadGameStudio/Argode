{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Argode What is Argode? Argode is a powerful visual novel framework built for Godot Engine 4.0+ . Create stunning interactive stories with ease while maintaining full flexibility and extensibility. \u2728 Key Features \ud83c\udfaf Design Philosophy Argode follows a single-autoload architecture with ArgodeSystem as the only global singleton. All managers are organized as child nodes, ensuring clean integration into any Godot project. \ud83c\udfac Visual Novel Core RGD Script Language : Intuitive scripting syntax for visual novels Character System : Dynamic character definitions with expressions and positioning Background & Scene Management : Smooth transitions and layered scenes Choice Menus : Interactive branching narratives Save/Load System : Complete game state management \ud83c\udfa8 Advanced Features Custom Commands : Unlimited extensibility through signal-based architecture Definition System : Centralized asset and variable management Layer Architecture : Flexible scene structure with role-based assignment UI Framework : Professional AdvScreen system for complex interfaces Asset Management : Smart preloading and memory optimization \ud83d\udee0\ufe0f Developer Experience Single File Setup : Import addon and you're ready to go Hot Reloading : Instant script updates during development Visual Studio Code Support : Syntax highlighting extension available Comprehensive Documentation : Detailed guides and API reference Example Projects : Learn from working implementations \ud83d\ude80 Quick Start Get started with Argode in just a few minutes: # 1. Add ArgodeSystem to your autoload # 2. Create your first script file label start: narrator \"Welcome to Argode!\" \"This is your first visual novel scene.\" menu: \"Continue the story\": jump next_scene \"Learn more about Argode\": jump tutorial Get Started Now \u2192 View Examples \u2192 \ud83d\udcda Documentation Sections :material-rocket-launch: Getting Started Installation guides, basic setup, and your first visual novel :octicons-arrow-right-24: Quick Start :material-architecture: Architecture Deep dive into Argode's design philosophy and core components :octicons-arrow-right-24: Learn More :material-script: Script Reference Complete RGD syntax reference with commands and examples :octicons-arrow-right-24: RGD Syntax :material-puzzle: Custom Commands Extend Argode with your own commands and effects :octicons-arrow-right-24: Custom Commands :material-palette: UI System Build beautiful interfaces with the AdvScreen framework :octicons-arrow-right-24: UI Framework :material-code-array: API Reference Complete API documentation for all Argode components :octicons-arrow-right-24: API Docs \ud83c\udfae Example Projects See Argode in action with these example implementations: Simple Visual Novel : Basic story with characters and choices Custom Features Demo : Advanced effects and custom commands Mobile-Optimized : Performance tips for mobile deployment \ud83e\udd1d Community & Support GitHub : AheadGameStudio/Argode Discord : Join our community server Issues : Report bugs and request features \ud83d\udcc4 License Argode is released under the MIT License . Free for both commercial and non-commercial use. Ready to create your visual novel? Start with the Quick Start guide \u2192","title":"Home"},{"location":"#welcome-to-argode","text":"","title":"Welcome to Argode"},{"location":"#what-is-argode","text":"Argode is a powerful visual novel framework built for Godot Engine 4.0+ . Create stunning interactive stories with ease while maintaining full flexibility and extensibility.","title":"What is Argode?"},{"location":"#key-features","text":"\ud83c\udfaf Design Philosophy Argode follows a single-autoload architecture with ArgodeSystem as the only global singleton. All managers are organized as child nodes, ensuring clean integration into any Godot project.","title":"\u2728 Key Features"},{"location":"#visual-novel-core","text":"RGD Script Language : Intuitive scripting syntax for visual novels Character System : Dynamic character definitions with expressions and positioning Background & Scene Management : Smooth transitions and layered scenes Choice Menus : Interactive branching narratives Save/Load System : Complete game state management","title":"\ud83c\udfac Visual Novel Core"},{"location":"#advanced-features","text":"Custom Commands : Unlimited extensibility through signal-based architecture Definition System : Centralized asset and variable management Layer Architecture : Flexible scene structure with role-based assignment UI Framework : Professional AdvScreen system for complex interfaces Asset Management : Smart preloading and memory optimization","title":"\ud83c\udfa8 Advanced Features"},{"location":"#developer-experience","text":"Single File Setup : Import addon and you're ready to go Hot Reloading : Instant script updates during development Visual Studio Code Support : Syntax highlighting extension available Comprehensive Documentation : Detailed guides and API reference Example Projects : Learn from working implementations","title":"\ud83d\udee0\ufe0f Developer Experience"},{"location":"#quick-start","text":"Get started with Argode in just a few minutes: # 1. Add ArgodeSystem to your autoload # 2. Create your first script file label start: narrator \"Welcome to Argode!\" \"This is your first visual novel scene.\" menu: \"Continue the story\": jump next_scene \"Learn more about Argode\": jump tutorial Get Started Now \u2192 View Examples \u2192","title":"\ud83d\ude80 Quick Start"},{"location":"#documentation-sections","text":":material-rocket-launch: Getting Started Installation guides, basic setup, and your first visual novel :octicons-arrow-right-24: Quick Start :material-architecture: Architecture Deep dive into Argode's design philosophy and core components :octicons-arrow-right-24: Learn More :material-script: Script Reference Complete RGD syntax reference with commands and examples :octicons-arrow-right-24: RGD Syntax :material-puzzle: Custom Commands Extend Argode with your own commands and effects :octicons-arrow-right-24: Custom Commands :material-palette: UI System Build beautiful interfaces with the AdvScreen framework :octicons-arrow-right-24: UI Framework :material-code-array: API Reference Complete API documentation for all Argode components :octicons-arrow-right-24: API Docs","title":"\ud83d\udcda Documentation Sections"},{"location":"#example-projects","text":"See Argode in action with these example implementations: Simple Visual Novel : Basic story with characters and choices Custom Features Demo : Advanced effects and custom commands Mobile-Optimized : Performance tips for mobile deployment","title":"\ud83c\udfae Example Projects"},{"location":"#community-support","text":"GitHub : AheadGameStudio/Argode Discord : Join our community server Issues : Report bugs and request features","title":"\ud83e\udd1d Community &amp; Support"},{"location":"#license","text":"Argode is released under the MIT License . Free for both commercial and non-commercial use. Ready to create your visual novel? Start with the Quick Start guide \u2192","title":"\ud83d\udcc4 License"},{"location":"architecture/design-philosophy/","text":"Design Philosophy Argode is built on a foundation of extensibility , flexibility , and developer convenience . This page outlines the core design principles that shape every aspect of the framework. \ud83c\udfd7\ufe0f Single Autoload Architecture Clean Integration Argode introduces only one singleton to your Godot project: ArgodeSystem . All other managers are organized as child nodes, ensuring minimal global namespace pollution and clean project integration. graph TD A[ArgodeSystem] --> B[CharacterManager] A --> C[UIManager] A --> D[VariableManager] A --> E[LayerManager] A --> F[ScriptPlayer] A --> G[LabelRegistry] A --> H[CustomCommandHandler] style A fill:#e1f5fe style B fill:#f3e5f5 style C fill:#f3e5f5 style D fill:#f3e5f5 style E fill:#f3e5f5 style F fill:#f3e5f5 style G fill:#f3e5f5 style H fill:#f3e5f5 This approach provides: Predictable structure : All components are easily discoverable No conflicts : Won't interfere with your existing autoloads Easy debugging : Clear hierarchy for troubleshooting Simple setup : Add one autoload and you're ready to go \ud83d\udcdd Script-Centric Asset Definition Following visual novel framework best practices, almost everything is defined in script files . Writers can work with plain text files, reducing the need for complex editor workflows. Definition Statements # Characters with expressions and colors character alice \"Alice\" color=#ff69b4 character bob \"Bob\" color=#4169e1 # Images with smart path resolution image bg_forest \"backgrounds/forest_day.jpg\" image alice_happy \"characters/alice/happy.png\" # Audio with preloading options audio bgm_main \"music/main_theme.ogg\" preload=true audio sfx_door \"sounds/door_open.wav\" # Custom shaders for effects shader screen_blur \"shaders/blur.gdshader\" Benefits Writer-friendly : No need to navigate complex UI hierarchies Version control : All definitions are in trackable text files Batch operations : Easy to rename, reorganize, or duplicate assets Documentation : Definitions serve as inline documentation \ud83c\udfaf Ultimate Extensibility Framework The heart of Argode's power lies in its signal-based extensibility system . Unknown commands and tags are automatically forwarded as signals, allowing unlimited customization. How It Works sequenceDiagram participant S as Script Player participant C as Custom Command Handler participant Y as Your Code S->>S: Parse \"particle_effect explosion\" S->>S: Not a built-in command S->>C: Emit custom_command_executed signal C->>Y: Forward to registered handlers Y->>Y: Execute custom logic Y->>C: Signal completion (if needed) C->>S: Continue script execution Example Implementation # In your game code func _ready(): ArgodeSystem.ScriptPlayer.custom_command_executed.connect(_handle_custom_command) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"particle_effect\": var effect_name = parameters.get(\"arg0\", \"default\") spawn_particle_effect(effect_name) \"screen_shake\": var intensity = parameters.get(\"intensity\", 5.0) var duration = parameters.get(\"duration\", 0.5) shake_screen(intensity, duration) This enables: Unlimited commands : Add any effect or feature you can imagine Game-specific logic : Integrate with your unique mechanics Third-party plugins : Community can create command libraries Future-proof : New features won't break existing scripts \ud83e\udde0 Predictive Asset Management Argode analyzes your entire script structure at startup to build a control flow graph , enabling intelligent asset preloading. Static Analysis graph LR A[Script Analysis] --> B[Control Flow Graph] B --> C[Reachability Analysis] C --> D[Smart Preloading] D --> E[Memory Optimization] style A fill:#e8f5e8 style E fill:#ffe8e8 Benefits Faster loading : Assets appear instantly when needed Memory efficiency : Only necessary assets are kept in memory Automatic optimization : No manual preload management required Branch prediction : Anticipates likely player choices Example label forest_scene: scene bg_forest with fade # \u2190 Will preload forest background show alice happy at center # \u2190 Will preload alice_happy image alice \"Let's explore!\" menu: \"Go deeper into forest\": # \u2190 Preloads deeper_forest assets jump deeper_forest \"Return to village\": # \u2190 Preloads village assets jump village_entrance \ud83c\udfa8 Flexible Layer Architecture Argode doesn't impose a specific scene structure. Instead, you define role mappings that tell the system which CanvasLayers serve which purposes. Role-Based Assignment # In your main scene setup ArgodeSystem.LayerManager.setup_layer_roles({ \"background\": $BackgroundLayer, \"characters\": $CharacterLayer, \"ui\": $UILayer, \"effects\": $EffectsLayer }) Adaptability This design supports: Existing projects : Integrate with your current scene structure Custom layouts : Use as many or as few layers as needed Complex hierarchies : Support for nested UI and effect layers Platform optimization : Different layer strategies for mobile/desktop \ud83d\udda5\ufe0f Advanced UI Framework The AdvScreen system provides a robust foundation for complex user interfaces that can interact seamlessly with the script system. Screen Capabilities extends AdvScreen func _ready(): # Direct script manipulation from UI call_script_label(\"character_info\") # Set variables that affect story set_story_variable(\"viewed_profile\", true) # Stack screens for complex workflows call_screen(\"inventory_detail\", {\"item_id\": \"magic_sword\"}) Features Script integration : UI can trigger story events Screen stacking : Modal dialogs and nested interfaces Data passing : Rich parameter system between screens Responsive design : Automatic layout adaptation \ud83d\udd04 Hot Reloading & Development Experience Argode is designed with rapid iteration in mind, supporting live updates during development. Development Features Script hot reloading : Changes appear instantly without restart Label registry updates : New scenes detected automatically Variable inspection : Real-time debugging of story state Command validation : Immediate feedback on syntax errors IDE Integration VS Code extension : Full syntax highlighting for .rgd files IntelliSense support : Auto-completion for commands and variables Error detection : Real-time validation of script syntax Project templates : Quick setup for new visual novels \ud83c\udfaa Performance Philosophy Argode balances ease of use with performance optimization through intelligent defaults and optional fine-tuning. Smart Defaults Automatic texture format selection Intelligent garbage collection timing Adaptive quality settings based on platform Lazy loading of non-critical assets Performance Knobs For projects that need it, Argode exposes: Manual memory management controls Custom asset loading strategies Performance profiling hooks Platform-specific optimizations This design philosophy ensures that Argode grows with your project\u2014from simple visual novels to complex interactive experiences with custom mechanics and advanced UI systems. Learn About System Overview \u2192 View Core Components \u2192","title":"Design Philosophy"},{"location":"architecture/design-philosophy/#design-philosophy","text":"Argode is built on a foundation of extensibility , flexibility , and developer convenience . This page outlines the core design principles that shape every aspect of the framework.","title":"Design Philosophy"},{"location":"architecture/design-philosophy/#single-autoload-architecture","text":"Clean Integration Argode introduces only one singleton to your Godot project: ArgodeSystem . All other managers are organized as child nodes, ensuring minimal global namespace pollution and clean project integration. graph TD A[ArgodeSystem] --> B[CharacterManager] A --> C[UIManager] A --> D[VariableManager] A --> E[LayerManager] A --> F[ScriptPlayer] A --> G[LabelRegistry] A --> H[CustomCommandHandler] style A fill:#e1f5fe style B fill:#f3e5f5 style C fill:#f3e5f5 style D fill:#f3e5f5 style E fill:#f3e5f5 style F fill:#f3e5f5 style G fill:#f3e5f5 style H fill:#f3e5f5 This approach provides: Predictable structure : All components are easily discoverable No conflicts : Won't interfere with your existing autoloads Easy debugging : Clear hierarchy for troubleshooting Simple setup : Add one autoload and you're ready to go","title":"\ud83c\udfd7\ufe0f Single Autoload Architecture"},{"location":"architecture/design-philosophy/#script-centric-asset-definition","text":"Following visual novel framework best practices, almost everything is defined in script files . Writers can work with plain text files, reducing the need for complex editor workflows.","title":"\ud83d\udcdd Script-Centric Asset Definition"},{"location":"architecture/design-philosophy/#definition-statements","text":"# Characters with expressions and colors character alice \"Alice\" color=#ff69b4 character bob \"Bob\" color=#4169e1 # Images with smart path resolution image bg_forest \"backgrounds/forest_day.jpg\" image alice_happy \"characters/alice/happy.png\" # Audio with preloading options audio bgm_main \"music/main_theme.ogg\" preload=true audio sfx_door \"sounds/door_open.wav\" # Custom shaders for effects shader screen_blur \"shaders/blur.gdshader\"","title":"Definition Statements"},{"location":"architecture/design-philosophy/#benefits","text":"Writer-friendly : No need to navigate complex UI hierarchies Version control : All definitions are in trackable text files Batch operations : Easy to rename, reorganize, or duplicate assets Documentation : Definitions serve as inline documentation","title":"Benefits"},{"location":"architecture/design-philosophy/#ultimate-extensibility-framework","text":"The heart of Argode's power lies in its signal-based extensibility system . Unknown commands and tags are automatically forwarded as signals, allowing unlimited customization.","title":"\ud83c\udfaf Ultimate Extensibility Framework"},{"location":"architecture/design-philosophy/#how-it-works","text":"sequenceDiagram participant S as Script Player participant C as Custom Command Handler participant Y as Your Code S->>S: Parse \"particle_effect explosion\" S->>S: Not a built-in command S->>C: Emit custom_command_executed signal C->>Y: Forward to registered handlers Y->>Y: Execute custom logic Y->>C: Signal completion (if needed) C->>S: Continue script execution","title":"How It Works"},{"location":"architecture/design-philosophy/#example-implementation","text":"# In your game code func _ready(): ArgodeSystem.ScriptPlayer.custom_command_executed.connect(_handle_custom_command) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"particle_effect\": var effect_name = parameters.get(\"arg0\", \"default\") spawn_particle_effect(effect_name) \"screen_shake\": var intensity = parameters.get(\"intensity\", 5.0) var duration = parameters.get(\"duration\", 0.5) shake_screen(intensity, duration) This enables: Unlimited commands : Add any effect or feature you can imagine Game-specific logic : Integrate with your unique mechanics Third-party plugins : Community can create command libraries Future-proof : New features won't break existing scripts","title":"Example Implementation"},{"location":"architecture/design-philosophy/#predictive-asset-management","text":"Argode analyzes your entire script structure at startup to build a control flow graph , enabling intelligent asset preloading.","title":"\ud83e\udde0 Predictive Asset Management"},{"location":"architecture/design-philosophy/#static-analysis","text":"graph LR A[Script Analysis] --> B[Control Flow Graph] B --> C[Reachability Analysis] C --> D[Smart Preloading] D --> E[Memory Optimization] style A fill:#e8f5e8 style E fill:#ffe8e8","title":"Static Analysis"},{"location":"architecture/design-philosophy/#benefits_1","text":"Faster loading : Assets appear instantly when needed Memory efficiency : Only necessary assets are kept in memory Automatic optimization : No manual preload management required Branch prediction : Anticipates likely player choices","title":"Benefits"},{"location":"architecture/design-philosophy/#example","text":"label forest_scene: scene bg_forest with fade # \u2190 Will preload forest background show alice happy at center # \u2190 Will preload alice_happy image alice \"Let's explore!\" menu: \"Go deeper into forest\": # \u2190 Preloads deeper_forest assets jump deeper_forest \"Return to village\": # \u2190 Preloads village assets jump village_entrance","title":"Example"},{"location":"architecture/design-philosophy/#flexible-layer-architecture","text":"Argode doesn't impose a specific scene structure. Instead, you define role mappings that tell the system which CanvasLayers serve which purposes.","title":"\ud83c\udfa8 Flexible Layer Architecture"},{"location":"architecture/design-philosophy/#role-based-assignment","text":"# In your main scene setup ArgodeSystem.LayerManager.setup_layer_roles({ \"background\": $BackgroundLayer, \"characters\": $CharacterLayer, \"ui\": $UILayer, \"effects\": $EffectsLayer })","title":"Role-Based Assignment"},{"location":"architecture/design-philosophy/#adaptability","text":"This design supports: Existing projects : Integrate with your current scene structure Custom layouts : Use as many or as few layers as needed Complex hierarchies : Support for nested UI and effect layers Platform optimization : Different layer strategies for mobile/desktop","title":"Adaptability"},{"location":"architecture/design-philosophy/#advanced-ui-framework","text":"The AdvScreen system provides a robust foundation for complex user interfaces that can interact seamlessly with the script system.","title":"\ud83d\udda5\ufe0f Advanced UI Framework"},{"location":"architecture/design-philosophy/#screen-capabilities","text":"extends AdvScreen func _ready(): # Direct script manipulation from UI call_script_label(\"character_info\") # Set variables that affect story set_story_variable(\"viewed_profile\", true) # Stack screens for complex workflows call_screen(\"inventory_detail\", {\"item_id\": \"magic_sword\"})","title":"Screen Capabilities"},{"location":"architecture/design-philosophy/#features","text":"Script integration : UI can trigger story events Screen stacking : Modal dialogs and nested interfaces Data passing : Rich parameter system between screens Responsive design : Automatic layout adaptation","title":"Features"},{"location":"architecture/design-philosophy/#hot-reloading-development-experience","text":"Argode is designed with rapid iteration in mind, supporting live updates during development.","title":"\ud83d\udd04 Hot Reloading &amp; Development Experience"},{"location":"architecture/design-philosophy/#development-features","text":"Script hot reloading : Changes appear instantly without restart Label registry updates : New scenes detected automatically Variable inspection : Real-time debugging of story state Command validation : Immediate feedback on syntax errors","title":"Development Features"},{"location":"architecture/design-philosophy/#ide-integration","text":"VS Code extension : Full syntax highlighting for .rgd files IntelliSense support : Auto-completion for commands and variables Error detection : Real-time validation of script syntax Project templates : Quick setup for new visual novels","title":"IDE Integration"},{"location":"architecture/design-philosophy/#performance-philosophy","text":"Argode balances ease of use with performance optimization through intelligent defaults and optional fine-tuning.","title":"\ud83c\udfaa Performance Philosophy"},{"location":"architecture/design-philosophy/#smart-defaults","text":"Automatic texture format selection Intelligent garbage collection timing Adaptive quality settings based on platform Lazy loading of non-critical assets","title":"Smart Defaults"},{"location":"architecture/design-philosophy/#performance-knobs","text":"For projects that need it, Argode exposes: Manual memory management controls Custom asset loading strategies Performance profiling hooks Platform-specific optimizations This design philosophy ensures that Argode grows with your project\u2014from simple visual novels to complex interactive experiences with custom mechanics and advanced UI systems. Learn About System Overview \u2192 View Core Components \u2192","title":"Performance Knobs"},{"location":"custom-commands/built-in/","text":"Built-in Custom Commands Argode includes a comprehensive set of pre-built custom commands that you can use immediately in your visual novels. These commands demonstrate best practices and provide common functionality out of the box. \ud83e\ude9f Window Operations window shake Shake the game window for dramatic effect. window shake intensity=5.0 duration=0.5 window shake 3.0 0.8 # Positional parameters Parameters: - intensity (float): Shake strength (default: 5.0) - duration (float): Duration in seconds (default: 0.5) Use Cases: - Explosions and impacts - Earthquake scenes - Dramatic reveals window fullscreen Toggle fullscreen mode. window fullscreen true window fullscreen false window fullscreen toggle # Toggles current state Parameters: - state (bool/string): true , false , or \"toggle\" window minimize Minimize the game window. window minimize Use Cases: - Easter eggs - Breaking the fourth wall - Special story moments \ud83d\udcf9 Camera Effects camera_shake Shake the camera/screen for visual impact. camera_shake intensity=2.0 duration=0.5 type=both camera_shake 3.0 1.0 horizontal # Positional parameters Parameters: - intensity (float): Shake strength (default: 1.0) - duration (float): Duration in seconds (default: 0.5) - type (string): Direction - both , horizontal , vertical (default: both) Examples: # Subtle character emotion camera_shake intensity=0.5 duration=0.2 type=horizontal # Major explosion camera_shake intensity=8.0 duration=1.5 type=both # Vertical impact camera_shake intensity=3.0 duration=0.8 type=vertical \ud83c\udfa8 Screen Effects screen_tint Apply a color tint to the entire screen. screen_tint color=#ff0000 intensity=0.3 duration=1.0 screen_tint red 0.5 2.0 # Positional parameters Parameters: - color (Color): Tint color (default: #ffffff) - intensity (float): Tint strength 0.0-1.0 (default: 0.5) - duration (float): Fade-in duration (default: 1.0) Use Cases: # Danger/anger scene screen_tint color=#ff0000 intensity=0.2 duration=0.5 # Sadness/melancholy screen_tint color=#0066ff intensity=0.3 duration=2.0 # Sickness/poison screen_tint color=#00ff00 intensity=0.4 duration=1.0 # Remove tint screen_tint color=#ffffff intensity=0.0 duration=1.5 screen_flash Quick screen flash effect. screen_flash color=#ffffff duration=0.1 intensity=1.0 screen_flash white 0.05 # Positional parameters Parameters: - color (Color): Flash color (default: #ffffff) - duration (float): Flash duration (default: 0.1) - intensity (float): Flash brightness (default: 1.0) Examples: # Lightning flash screen_flash color=#ffffff duration=0.05 intensity=0.8 # Magic spell effect screen_flash color=#ff00ff duration=0.2 intensity=0.6 # Camera flash screen_flash color=#ffffff duration=0.1 intensity=1.0 screen_blur Apply blur effect to the screen. screen_blur intensity=2.0 duration=0.5 screen_blur 1.5 1.0 # Positional parameters Parameters: - intensity (float): Blur amount (default: 1.0) - duration (float): Transition duration (default: 0.5) Use Cases: # Character loses focus screen_blur intensity=3.0 duration=1.0 # Dream sequence start screen_blur intensity=2.0 duration=2.0 # Remove blur screen_blur intensity=0.0 duration=1.0 \ud83c\udfb5 Audio Commands play_sound Play a sound effect. play_sound \"door_open.wav\" volume=1.0 play_sound footsteps.ogg 0.8 # Positional parameters Parameters: - file (string): Audio file path - volume (float): Volume 0.0-1.0 (default: 1.0) play_music Play background music with optional fade. play_music \"theme.ogg\" volume=0.7 fade_in=2.0 play_music battle_music.ogg # Positional parameters Parameters: - file (string): Music file path - volume (float): Volume 0.0-1.0 (default: 0.8) - fade_in (float): Fade-in duration (default: 0.0) stop_music Stop background music with optional fade-out. stop_music fade_out=1.5 stop_music 2.0 # Positional parameter Parameters: - fade_out (float): Fade-out duration (default: 0.0) \u2728 Particle Effects particle_effect Create particle effects at specified positions. particle_effect explosion x=400 y=300 scale=1.0 particle_effect snow x=640 y=100 scale=0.5 Parameters: - type (string): Effect type ( explosion , snow , fire , sparkle ) - x (float): X position (default: screen center) - y (float): Y position (default: screen center) - scale (float): Effect scale (default: 1.0) Built-in Effect Types: - explosion : Fiery explosion with debris - snow : Gentle falling snow - fire : Flickering flames - sparkle : Magical sparkles - smoke : Rising smoke clouds \ud83c\udfad Layer Effects layer_tint Apply tint to specific layers. layer_tint background color=#0066cc intensity=0.5 duration=1.0 layer_tint characters red 0.3 2.0 # Positional parameters Parameters: - layer (string): Layer name ( background , characters , ui ) - color (Color): Tint color - intensity (float): Tint strength 0.0-1.0 - duration (float): Transition duration Examples: # Sunset lighting on background layer_tint background color=#ff8800 intensity=0.4 duration=3.0 # Character in shadow layer_tint characters color=#000066 intensity=0.6 duration=1.0 \ud83d\udd50 Timing Commands wait Pause script execution for specified duration. wait duration=2.0 wait 1.5 # Positional parameter Parameters: - duration (float): Wait time in seconds Use Cases: narrator \"Something is about to happen...\" wait 2.0 screen_flash narrator \"There it is!\" wait_for_input Wait for player input before continuing. wait_for_input message=\"Press any key to continue\" wait_for_input # Uses default message Parameters: - message (string): Instruction text (optional) \ud83d\udcbe Save System Commands quicksave Create a quick save at current position. quicksave slot=1 message=\"Progress saved!\" quicksave # Uses default slot Parameters: - slot (int): Save slot number (default: 1) - message (string): Confirmation message (optional) quickload Load from quick save slot. quickload slot=1 quickload # Loads from default slot Parameters: - slot (int): Save slot number (default: 1) \ud83c\udfae Advanced Examples Combining Commands label dramatic_reveal: narrator \"The truth is about to be revealed...\" # Build tension camera_shake intensity=1.0 duration=0.5 type=horizontal wait 0.5 # Major revelation screen_flash color=#ffffff duration=0.1 screen_tint color=#ff0000 intensity=0.3 duration=0.5 window shake intensity=8.0 duration=1.0 play_sound \"dramatic_sting.wav\" volume=1.0 narrator \"I am your father!\" # Calm down wait 2.0 screen_tint color=#ffffff intensity=0.0 duration=2.0 Atmospheric Scene label forest_night: scene bg_forest_night with fade # Set night atmosphere screen_tint color=#000066 intensity=0.4 duration=2.0 layer_tint background color=#001122 intensity=0.6 duration=2.0 play_music \"night_ambience.ogg\" volume=0.5 fade_in=3.0 # Add environmental effects particle_effect snow x=320 y=100 scale=0.3 wait 1.0 particle_effect snow x=500 y=150 scale=0.4 alice \"It's getting cold...\" \ud83d\udd27 Implementation Notes All built-in custom commands are implemented in CustomCommandHandler.gd and follow these patterns: Parameter validation : All inputs are validated and clamped to safe ranges Error handling : Invalid parameters generate warnings instead of crashes Async support : Long-running commands properly signal completion Resource cleanup : Effects are automatically cleaned up when scenes change \ud83d\udcda Next Steps Creating Custom Commands : Build your own commands Advanced Patterns : Complex command combinations Performance Tips : Optimizing command usage These built-in commands provide a solid foundation for most visual novel needs. Combined with the ability to create your own custom commands, Argode offers unlimited creative possibilities! Learn to Create Commands \u2192 View Examples \u2192","title":"Built-in Commands"},{"location":"custom-commands/built-in/#built-in-custom-commands","text":"Argode includes a comprehensive set of pre-built custom commands that you can use immediately in your visual novels. These commands demonstrate best practices and provide common functionality out of the box.","title":"Built-in Custom Commands"},{"location":"custom-commands/built-in/#window-operations","text":"","title":"\ud83e\ude9f Window Operations"},{"location":"custom-commands/built-in/#window-shake","text":"Shake the game window for dramatic effect. window shake intensity=5.0 duration=0.5 window shake 3.0 0.8 # Positional parameters Parameters: - intensity (float): Shake strength (default: 5.0) - duration (float): Duration in seconds (default: 0.5) Use Cases: - Explosions and impacts - Earthquake scenes - Dramatic reveals","title":"window shake"},{"location":"custom-commands/built-in/#window-fullscreen","text":"Toggle fullscreen mode. window fullscreen true window fullscreen false window fullscreen toggle # Toggles current state Parameters: - state (bool/string): true , false , or \"toggle\"","title":"window fullscreen"},{"location":"custom-commands/built-in/#window-minimize","text":"Minimize the game window. window minimize Use Cases: - Easter eggs - Breaking the fourth wall - Special story moments","title":"window minimize"},{"location":"custom-commands/built-in/#camera-effects","text":"","title":"\ud83d\udcf9 Camera Effects"},{"location":"custom-commands/built-in/#camera_shake","text":"Shake the camera/screen for visual impact. camera_shake intensity=2.0 duration=0.5 type=both camera_shake 3.0 1.0 horizontal # Positional parameters Parameters: - intensity (float): Shake strength (default: 1.0) - duration (float): Duration in seconds (default: 0.5) - type (string): Direction - both , horizontal , vertical (default: both) Examples: # Subtle character emotion camera_shake intensity=0.5 duration=0.2 type=horizontal # Major explosion camera_shake intensity=8.0 duration=1.5 type=both # Vertical impact camera_shake intensity=3.0 duration=0.8 type=vertical","title":"camera_shake"},{"location":"custom-commands/built-in/#screen-effects","text":"","title":"\ud83c\udfa8 Screen Effects"},{"location":"custom-commands/built-in/#screen_tint","text":"Apply a color tint to the entire screen. screen_tint color=#ff0000 intensity=0.3 duration=1.0 screen_tint red 0.5 2.0 # Positional parameters Parameters: - color (Color): Tint color (default: #ffffff) - intensity (float): Tint strength 0.0-1.0 (default: 0.5) - duration (float): Fade-in duration (default: 1.0) Use Cases: # Danger/anger scene screen_tint color=#ff0000 intensity=0.2 duration=0.5 # Sadness/melancholy screen_tint color=#0066ff intensity=0.3 duration=2.0 # Sickness/poison screen_tint color=#00ff00 intensity=0.4 duration=1.0 # Remove tint screen_tint color=#ffffff intensity=0.0 duration=1.5","title":"screen_tint"},{"location":"custom-commands/built-in/#screen_flash","text":"Quick screen flash effect. screen_flash color=#ffffff duration=0.1 intensity=1.0 screen_flash white 0.05 # Positional parameters Parameters: - color (Color): Flash color (default: #ffffff) - duration (float): Flash duration (default: 0.1) - intensity (float): Flash brightness (default: 1.0) Examples: # Lightning flash screen_flash color=#ffffff duration=0.05 intensity=0.8 # Magic spell effect screen_flash color=#ff00ff duration=0.2 intensity=0.6 # Camera flash screen_flash color=#ffffff duration=0.1 intensity=1.0","title":"screen_flash"},{"location":"custom-commands/built-in/#screen_blur","text":"Apply blur effect to the screen. screen_blur intensity=2.0 duration=0.5 screen_blur 1.5 1.0 # Positional parameters Parameters: - intensity (float): Blur amount (default: 1.0) - duration (float): Transition duration (default: 0.5) Use Cases: # Character loses focus screen_blur intensity=3.0 duration=1.0 # Dream sequence start screen_blur intensity=2.0 duration=2.0 # Remove blur screen_blur intensity=0.0 duration=1.0","title":"screen_blur"},{"location":"custom-commands/built-in/#audio-commands","text":"","title":"\ud83c\udfb5 Audio Commands"},{"location":"custom-commands/built-in/#play_sound","text":"Play a sound effect. play_sound \"door_open.wav\" volume=1.0 play_sound footsteps.ogg 0.8 # Positional parameters Parameters: - file (string): Audio file path - volume (float): Volume 0.0-1.0 (default: 1.0)","title":"play_sound"},{"location":"custom-commands/built-in/#play_music","text":"Play background music with optional fade. play_music \"theme.ogg\" volume=0.7 fade_in=2.0 play_music battle_music.ogg # Positional parameters Parameters: - file (string): Music file path - volume (float): Volume 0.0-1.0 (default: 0.8) - fade_in (float): Fade-in duration (default: 0.0)","title":"play_music"},{"location":"custom-commands/built-in/#stop_music","text":"Stop background music with optional fade-out. stop_music fade_out=1.5 stop_music 2.0 # Positional parameter Parameters: - fade_out (float): Fade-out duration (default: 0.0)","title":"stop_music"},{"location":"custom-commands/built-in/#particle-effects","text":"","title":"\u2728 Particle Effects"},{"location":"custom-commands/built-in/#particle_effect","text":"Create particle effects at specified positions. particle_effect explosion x=400 y=300 scale=1.0 particle_effect snow x=640 y=100 scale=0.5 Parameters: - type (string): Effect type ( explosion , snow , fire , sparkle ) - x (float): X position (default: screen center) - y (float): Y position (default: screen center) - scale (float): Effect scale (default: 1.0) Built-in Effect Types: - explosion : Fiery explosion with debris - snow : Gentle falling snow - fire : Flickering flames - sparkle : Magical sparkles - smoke : Rising smoke clouds","title":"particle_effect"},{"location":"custom-commands/built-in/#layer-effects","text":"","title":"\ud83c\udfad Layer Effects"},{"location":"custom-commands/built-in/#layer_tint","text":"Apply tint to specific layers. layer_tint background color=#0066cc intensity=0.5 duration=1.0 layer_tint characters red 0.3 2.0 # Positional parameters Parameters: - layer (string): Layer name ( background , characters , ui ) - color (Color): Tint color - intensity (float): Tint strength 0.0-1.0 - duration (float): Transition duration Examples: # Sunset lighting on background layer_tint background color=#ff8800 intensity=0.4 duration=3.0 # Character in shadow layer_tint characters color=#000066 intensity=0.6 duration=1.0","title":"layer_tint"},{"location":"custom-commands/built-in/#timing-commands","text":"","title":"\ud83d\udd50 Timing Commands"},{"location":"custom-commands/built-in/#wait","text":"Pause script execution for specified duration. wait duration=2.0 wait 1.5 # Positional parameter Parameters: - duration (float): Wait time in seconds Use Cases: narrator \"Something is about to happen...\" wait 2.0 screen_flash narrator \"There it is!\"","title":"wait"},{"location":"custom-commands/built-in/#wait_for_input","text":"Wait for player input before continuing. wait_for_input message=\"Press any key to continue\" wait_for_input # Uses default message Parameters: - message (string): Instruction text (optional)","title":"wait_for_input"},{"location":"custom-commands/built-in/#save-system-commands","text":"","title":"\ud83d\udcbe Save System Commands"},{"location":"custom-commands/built-in/#quicksave","text":"Create a quick save at current position. quicksave slot=1 message=\"Progress saved!\" quicksave # Uses default slot Parameters: - slot (int): Save slot number (default: 1) - message (string): Confirmation message (optional)","title":"quicksave"},{"location":"custom-commands/built-in/#quickload","text":"Load from quick save slot. quickload slot=1 quickload # Loads from default slot Parameters: - slot (int): Save slot number (default: 1)","title":"quickload"},{"location":"custom-commands/built-in/#advanced-examples","text":"","title":"\ud83c\udfae Advanced Examples"},{"location":"custom-commands/built-in/#combining-commands","text":"label dramatic_reveal: narrator \"The truth is about to be revealed...\" # Build tension camera_shake intensity=1.0 duration=0.5 type=horizontal wait 0.5 # Major revelation screen_flash color=#ffffff duration=0.1 screen_tint color=#ff0000 intensity=0.3 duration=0.5 window shake intensity=8.0 duration=1.0 play_sound \"dramatic_sting.wav\" volume=1.0 narrator \"I am your father!\" # Calm down wait 2.0 screen_tint color=#ffffff intensity=0.0 duration=2.0","title":"Combining Commands"},{"location":"custom-commands/built-in/#atmospheric-scene","text":"label forest_night: scene bg_forest_night with fade # Set night atmosphere screen_tint color=#000066 intensity=0.4 duration=2.0 layer_tint background color=#001122 intensity=0.6 duration=2.0 play_music \"night_ambience.ogg\" volume=0.5 fade_in=3.0 # Add environmental effects particle_effect snow x=320 y=100 scale=0.3 wait 1.0 particle_effect snow x=500 y=150 scale=0.4 alice \"It's getting cold...\"","title":"Atmospheric Scene"},{"location":"custom-commands/built-in/#implementation-notes","text":"All built-in custom commands are implemented in CustomCommandHandler.gd and follow these patterns: Parameter validation : All inputs are validated and clamped to safe ranges Error handling : Invalid parameters generate warnings instead of crashes Async support : Long-running commands properly signal completion Resource cleanup : Effects are automatically cleaned up when scenes change","title":"\ud83d\udd27 Implementation Notes"},{"location":"custom-commands/built-in/#next-steps","text":"Creating Custom Commands : Build your own commands Advanced Patterns : Complex command combinations Performance Tips : Optimizing command usage These built-in commands provide a solid foundation for most visual novel needs. Combined with the ability to create your own custom commands, Argode offers unlimited creative possibilities! Learn to Create Commands \u2192 View Examples \u2192","title":"\ud83d\udcda Next Steps"},{"location":"custom-commands/overview/","text":"Custom Commands Overview One of Argode's most powerful features is its unlimited extensibility through custom commands. Any command not recognized by the built-in script parser is automatically forwarded as a signal, allowing you to implement game-specific functionality seamlessly. \ud83c\udfaf How Custom Commands Work When Argode encounters an unknown command in your script, it follows this process: graph TD A[Parse Script Line] --> B{Built-in Command?} B -->|Yes| C[Execute Built-in] B -->|No| D[Extract Command & Parameters] D --> E[Emit custom_command_executed Signal] E --> F[Your Handler Receives Signal] F --> G[Execute Custom Logic] G --> H[Continue Script] style E fill:#e1f5fe style F fill:#f3e5f5 \ud83d\udcdd Basic Example Let's create a custom screen shake effect: In Your Script (story.rgd) label earthquake_scene: narrator \"The ground begins to shake!\" screen_shake intensity=8.0 duration=2.0 narrator \"That was intense!\" In Your Code (Main.gd) extends Control func _ready(): # Connect to the custom command signal ArgodeSystem.ScriptPlayer.custom_command_executed.connect(_handle_custom_command) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"screen_shake\": var intensity = parameters.get(\"intensity\", 5.0) var duration = parameters.get(\"duration\", 1.0) _shake_screen(intensity, duration) func _shake_screen(intensity: float, duration: float): var tween = create_tween() var original_position = global_position for i in range(int(duration * 60)): # 60 FPS var offset = Vector2( randf_range(-intensity, intensity), randf_range(-intensity, intensity) ) tween.tween_to(global_position + offset, 1.0/60.0) tween.tween_to(original_position, 0.1) \ud83d\udd27 Parameter Parsing Argode automatically parses parameters in multiple formats: Key-Value Parameters particle_effect type=\"explosion\" x=100 y=200 scale=1.5 # parameters[\"type\"] = \"explosion\" # parameters[\"x\"] = 100 # parameters[\"y\"] = 200 # parameters[\"scale\"] = 1.5 Positional Parameters fade_to_color red 2.0 ease_in # parameters[\"arg0\"] = \"red\" # parameters[\"arg1\"] = 2.0 # parameters[\"arg2\"] = \"ease_in\" # parameters[\"_count\"] = 3 Mixed Parameters spawn_enemy goblin attack=15 x=300 magical=true # parameters[\"arg0\"] = \"goblin\" # parameters[\"attack\"] = 15 # parameters[\"x\"] = 300 # parameters[\"magical\"] = true \ud83c\udfae Built-in Custom Commands Argode includes several pre-built custom commands that demonstrate best practices: Window Effects window shake intensity=5.0 duration=0.5 window fullscreen toggle window resize 1280 720 Screen Effects screen_tint color=#ff0000 intensity=0.3 duration=1.0 screen_flash color=#ffffff duration=0.1 screen_blur intensity=2.0 duration=0.5 Advanced Effects particle_effect explosion x=400 y=300 camera_shake intensity=3.0 duration=1.5 layer_tint background color=#0066cc intensity=0.5 View All Built-in Commands \u2192 \u26a1 Synchronous vs Asynchronous Commands Commands can be either synchronous (block script execution) or asynchronous (run in parallel): Asynchronous (Default) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"play_sound\": # Script continues immediately audio_player.play_sound(parameters.get(\"file\")) Synchronous func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"wait\": # Script waits for completion var duration = parameters.get(\"duration\", 1.0) await get_tree().create_timer(duration).timeout ArgodeSystem.CustomCommandHandler.synchronous_command_completed.emit() \ud83c\udfa8 Advanced Use Cases Game Mechanics Integration # RPG-style commands add_item \"Magic Sword\" quantity=1 gain_experience 250 level_up_check # Inventory management show_inventory category=\"weapons\" equip_item \"Magic Sword\" Visual Effects # Complex animations animate_character alice slide_in from=left duration=0.8 easing=bounce morph_background from=day to=night duration=3.0 create_weather rain intensity=0.7 Custom UI # Mini-games and interactive elements start_minigame \"puzzle_box\" difficulty=3 show_map location=\"forest\" interactive=true display_stats character=\"alice\" style=\"detailed\" \ud83d\udcda Best Practices 1. Consistent Naming Use clear, descriptive command names: \u2705 screen_shake intensity=5.0 \u2705 play_music \"battle_theme\" volume=0.8 \u274c shake 5 \u274c music battle_theme 2. Parameter Validation Always validate parameters in your handlers: func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"screen_shake\": var intensity = clamp(parameters.get(\"intensity\", 5.0), 0.1, 50.0) var duration = clamp(parameters.get(\"duration\", 1.0), 0.1, 10.0) _shake_screen(intensity, duration) 3. Error Handling Provide meaningful error messages: func _handle_play_sound(parameters: Dictionary): var file = parameters.get(\"file\", \"\") if file.is_empty(): push_error(\"play_sound command requires 'file' parameter\") return if not FileAccess.file_exists(\"res://audio/\" + file): push_error(\"Audio file not found: \" + file) return audio_player.stream = load(\"res://audio/\" + file) audio_player.play() 4. Documentation Document your custom commands: ## Shakes the screen with specified intensity and duration ## Parameters: ## intensity (float): Shake strength (0.1 - 50.0, default: 5.0) ## duration (float): Shake duration in seconds (0.1 - 10.0, default: 1.0) ## Example: screen_shake intensity=3.0 duration=0.8 func _handle_screen_shake(parameters: Dictionary): # Implementation... \ud83d\ude80 Next Steps Ready to create your own custom commands? Built-in Commands Reference : See all available commands Creating Custom Commands : Step-by-step implementation guide Advanced Patterns : Complex command examples The custom command system makes Argode infinitely extensible\u2014from simple effects to complex game mechanics, anything is possible! View Built-in Commands \u2192 Create Your Own \u2192","title":"Overview"},{"location":"custom-commands/overview/#custom-commands-overview","text":"One of Argode's most powerful features is its unlimited extensibility through custom commands. Any command not recognized by the built-in script parser is automatically forwarded as a signal, allowing you to implement game-specific functionality seamlessly.","title":"Custom Commands Overview"},{"location":"custom-commands/overview/#how-custom-commands-work","text":"When Argode encounters an unknown command in your script, it follows this process: graph TD A[Parse Script Line] --> B{Built-in Command?} B -->|Yes| C[Execute Built-in] B -->|No| D[Extract Command & Parameters] D --> E[Emit custom_command_executed Signal] E --> F[Your Handler Receives Signal] F --> G[Execute Custom Logic] G --> H[Continue Script] style E fill:#e1f5fe style F fill:#f3e5f5","title":"\ud83c\udfaf How Custom Commands Work"},{"location":"custom-commands/overview/#basic-example","text":"Let's create a custom screen shake effect:","title":"\ud83d\udcdd Basic Example"},{"location":"custom-commands/overview/#in-your-script-storyrgd","text":"label earthquake_scene: narrator \"The ground begins to shake!\" screen_shake intensity=8.0 duration=2.0 narrator \"That was intense!\"","title":"In Your Script (story.rgd)"},{"location":"custom-commands/overview/#in-your-code-maingd","text":"extends Control func _ready(): # Connect to the custom command signal ArgodeSystem.ScriptPlayer.custom_command_executed.connect(_handle_custom_command) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"screen_shake\": var intensity = parameters.get(\"intensity\", 5.0) var duration = parameters.get(\"duration\", 1.0) _shake_screen(intensity, duration) func _shake_screen(intensity: float, duration: float): var tween = create_tween() var original_position = global_position for i in range(int(duration * 60)): # 60 FPS var offset = Vector2( randf_range(-intensity, intensity), randf_range(-intensity, intensity) ) tween.tween_to(global_position + offset, 1.0/60.0) tween.tween_to(original_position, 0.1)","title":"In Your Code (Main.gd)"},{"location":"custom-commands/overview/#parameter-parsing","text":"Argode automatically parses parameters in multiple formats:","title":"\ud83d\udd27 Parameter Parsing"},{"location":"custom-commands/overview/#key-value-parameters","text":"particle_effect type=\"explosion\" x=100 y=200 scale=1.5 # parameters[\"type\"] = \"explosion\" # parameters[\"x\"] = 100 # parameters[\"y\"] = 200 # parameters[\"scale\"] = 1.5","title":"Key-Value Parameters"},{"location":"custom-commands/overview/#positional-parameters","text":"fade_to_color red 2.0 ease_in # parameters[\"arg0\"] = \"red\" # parameters[\"arg1\"] = 2.0 # parameters[\"arg2\"] = \"ease_in\" # parameters[\"_count\"] = 3","title":"Positional Parameters"},{"location":"custom-commands/overview/#mixed-parameters","text":"spawn_enemy goblin attack=15 x=300 magical=true # parameters[\"arg0\"] = \"goblin\" # parameters[\"attack\"] = 15 # parameters[\"x\"] = 300 # parameters[\"magical\"] = true","title":"Mixed Parameters"},{"location":"custom-commands/overview/#built-in-custom-commands","text":"Argode includes several pre-built custom commands that demonstrate best practices:","title":"\ud83c\udfae Built-in Custom Commands"},{"location":"custom-commands/overview/#window-effects","text":"window shake intensity=5.0 duration=0.5 window fullscreen toggle window resize 1280 720","title":"Window Effects"},{"location":"custom-commands/overview/#screen-effects","text":"screen_tint color=#ff0000 intensity=0.3 duration=1.0 screen_flash color=#ffffff duration=0.1 screen_blur intensity=2.0 duration=0.5","title":"Screen Effects"},{"location":"custom-commands/overview/#advanced-effects","text":"particle_effect explosion x=400 y=300 camera_shake intensity=3.0 duration=1.5 layer_tint background color=#0066cc intensity=0.5 View All Built-in Commands \u2192","title":"Advanced Effects"},{"location":"custom-commands/overview/#synchronous-vs-asynchronous-commands","text":"Commands can be either synchronous (block script execution) or asynchronous (run in parallel):","title":"\u26a1 Synchronous vs Asynchronous Commands"},{"location":"custom-commands/overview/#asynchronous-default","text":"func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"play_sound\": # Script continues immediately audio_player.play_sound(parameters.get(\"file\"))","title":"Asynchronous (Default)"},{"location":"custom-commands/overview/#synchronous","text":"func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"wait\": # Script waits for completion var duration = parameters.get(\"duration\", 1.0) await get_tree().create_timer(duration).timeout ArgodeSystem.CustomCommandHandler.synchronous_command_completed.emit()","title":"Synchronous"},{"location":"custom-commands/overview/#advanced-use-cases","text":"","title":"\ud83c\udfa8 Advanced Use Cases"},{"location":"custom-commands/overview/#game-mechanics-integration","text":"# RPG-style commands add_item \"Magic Sword\" quantity=1 gain_experience 250 level_up_check # Inventory management show_inventory category=\"weapons\" equip_item \"Magic Sword\"","title":"Game Mechanics Integration"},{"location":"custom-commands/overview/#visual-effects","text":"# Complex animations animate_character alice slide_in from=left duration=0.8 easing=bounce morph_background from=day to=night duration=3.0 create_weather rain intensity=0.7","title":"Visual Effects"},{"location":"custom-commands/overview/#custom-ui","text":"# Mini-games and interactive elements start_minigame \"puzzle_box\" difficulty=3 show_map location=\"forest\" interactive=true display_stats character=\"alice\" style=\"detailed\"","title":"Custom UI"},{"location":"custom-commands/overview/#best-practices","text":"","title":"\ud83d\udcda Best Practices"},{"location":"custom-commands/overview/#1-consistent-naming","text":"Use clear, descriptive command names: \u2705 screen_shake intensity=5.0 \u2705 play_music \"battle_theme\" volume=0.8 \u274c shake 5 \u274c music battle_theme","title":"1. Consistent Naming"},{"location":"custom-commands/overview/#2-parameter-validation","text":"Always validate parameters in your handlers: func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"screen_shake\": var intensity = clamp(parameters.get(\"intensity\", 5.0), 0.1, 50.0) var duration = clamp(parameters.get(\"duration\", 1.0), 0.1, 10.0) _shake_screen(intensity, duration)","title":"2. Parameter Validation"},{"location":"custom-commands/overview/#3-error-handling","text":"Provide meaningful error messages: func _handle_play_sound(parameters: Dictionary): var file = parameters.get(\"file\", \"\") if file.is_empty(): push_error(\"play_sound command requires 'file' parameter\") return if not FileAccess.file_exists(\"res://audio/\" + file): push_error(\"Audio file not found: \" + file) return audio_player.stream = load(\"res://audio/\" + file) audio_player.play()","title":"3. Error Handling"},{"location":"custom-commands/overview/#4-documentation","text":"Document your custom commands: ## Shakes the screen with specified intensity and duration ## Parameters: ## intensity (float): Shake strength (0.1 - 50.0, default: 5.0) ## duration (float): Shake duration in seconds (0.1 - 10.0, default: 1.0) ## Example: screen_shake intensity=3.0 duration=0.8 func _handle_screen_shake(parameters: Dictionary): # Implementation...","title":"4. Documentation"},{"location":"custom-commands/overview/#next-steps","text":"Ready to create your own custom commands? Built-in Commands Reference : See all available commands Creating Custom Commands : Step-by-step implementation guide Advanced Patterns : Complex command examples The custom command system makes Argode infinitely extensible\u2014from simple effects to complex game mechanics, anything is possible! View Built-in Commands \u2192 Create Your Own \u2192","title":"\ud83d\ude80 Next Steps"},{"location":"getting-started/quick-start/","text":"Quick Start Guide Get up and running with Argode in just a few minutes! This guide will help you create your first visual novel scene. Prerequisites Godot Engine 4.0+ ( Download here ) Basic familiarity with Godot projects Step 1: Install Argode Option A: From AssetLib (Recommended) Open Godot Engine Go to AssetLib tab Search for \"Argode\" Click Download and Install Option B: Manual Installation Download the latest release from GitHub Extract the addons/argode/ folder to your project's addons/ directory Enable the plugin in Project Settings \u2192 Plugins Step 2: Setup Autoload Open Project Settings ( Project \u2192 Project Settings ) Go to Autoload tab Add ArgodeSystem : Path : res://addons/argode/core/ArgodeSystem.gd Node Name : ArgodeSystem Check Enable Step 3: Create Your First Script Create a new file scenarios/story.rgd : # story.rgd - Your first visual novel script # Define characters character narrator \"Narrator\" color=#ffffff character alice \"Alice\" color=#ff69b4 label start: narrator \"Welcome to your first Argode visual novel!\" show alice happy at center with fade alice \"Hello! I'm Alice, your guide to this new world.\" alice \"What would you like to do first?\" menu: \"Learn about the story\": jump learn_story \"Explore the world\": jump explore_world \"Meet other characters\": jump meet_characters label learn_story: alice \"This is where your amazing story begins!\" alice \"You can create complex narratives with branching paths.\" narrator \"Use 'jump' to move between story sections.\" jump continue_story label explore_world: scene background_forest with fade alice \"Welcome to our magical forest!\" alice \"Scenes can change backgrounds with smooth transitions.\" jump continue_story label meet_characters: hide alice with fade show bob normal at left with fade bob \"Hi there! I'm Bob, Alice's friend.\" show alice happy at right with fade alice \"Characters can appear and disappear as needed!\" jump continue_story label continue_story: narrator \"This is just the beginning of your visual novel journey.\" narrator \"Check out the documentation to learn more advanced features!\" Step 4: Create the Main Scene Create a new scene ( Scene \u2192 New Scene ) Add a Control node as root and save as Main.tscn Attach this script to the Control node: extends Control func _ready(): # Initialize Argode and load the script if ArgodeSystem: ArgodeSystem.load_and_play_script(\"res://scenarios/story.rgd\", \"start\") else: print(\"ArgodeSystem not found! Make sure it's in autoload.\") Step 5: Set as Main Scene Go to Project Settings Set Main Scene to your Main.tscn Press F5 to run your visual novel! What You Just Created Congratulations! You've created a complete visual novel with: \u2705 Character definitions with names and colors \u2705 Dialogue system with character portraits \u2705 Choice menus for player interaction \u2705 Scene transitions and background changes \u2705 Branching narrative with labels and jumps Next Steps Ready to dive deeper? Explore these topics: \ud83c\udfa8 Enhance Visuals Character expressions and positioning Background transitions and effects Custom UI themes \ud83c\udfaf Add Interactivity Variables and conditional logic Save/Load system Custom commands for effects \ud83d\udcda Study Examples Simple Visual Novel Advanced Features Demo Best Practices Guide Having trouble? Check the Troubleshooting Guide or join our Discord community! Continue to Installation Details \u2192 View Script Reference \u2192","title":"Quick Start"},{"location":"getting-started/quick-start/#quick-start-guide","text":"Get up and running with Argode in just a few minutes! This guide will help you create your first visual novel scene.","title":"Quick Start Guide"},{"location":"getting-started/quick-start/#prerequisites","text":"Godot Engine 4.0+ ( Download here ) Basic familiarity with Godot projects","title":"Prerequisites"},{"location":"getting-started/quick-start/#step-1-install-argode","text":"","title":"Step 1: Install Argode"},{"location":"getting-started/quick-start/#option-a-from-assetlib-recommended","text":"Open Godot Engine Go to AssetLib tab Search for \"Argode\" Click Download and Install","title":"Option A: From AssetLib (Recommended)"},{"location":"getting-started/quick-start/#option-b-manual-installation","text":"Download the latest release from GitHub Extract the addons/argode/ folder to your project's addons/ directory Enable the plugin in Project Settings \u2192 Plugins","title":"Option B: Manual Installation"},{"location":"getting-started/quick-start/#step-2-setup-autoload","text":"Open Project Settings ( Project \u2192 Project Settings ) Go to Autoload tab Add ArgodeSystem : Path : res://addons/argode/core/ArgodeSystem.gd Node Name : ArgodeSystem Check Enable","title":"Step 2: Setup Autoload"},{"location":"getting-started/quick-start/#step-3-create-your-first-script","text":"Create a new file scenarios/story.rgd : # story.rgd - Your first visual novel script # Define characters character narrator \"Narrator\" color=#ffffff character alice \"Alice\" color=#ff69b4 label start: narrator \"Welcome to your first Argode visual novel!\" show alice happy at center with fade alice \"Hello! I'm Alice, your guide to this new world.\" alice \"What would you like to do first?\" menu: \"Learn about the story\": jump learn_story \"Explore the world\": jump explore_world \"Meet other characters\": jump meet_characters label learn_story: alice \"This is where your amazing story begins!\" alice \"You can create complex narratives with branching paths.\" narrator \"Use 'jump' to move between story sections.\" jump continue_story label explore_world: scene background_forest with fade alice \"Welcome to our magical forest!\" alice \"Scenes can change backgrounds with smooth transitions.\" jump continue_story label meet_characters: hide alice with fade show bob normal at left with fade bob \"Hi there! I'm Bob, Alice's friend.\" show alice happy at right with fade alice \"Characters can appear and disappear as needed!\" jump continue_story label continue_story: narrator \"This is just the beginning of your visual novel journey.\" narrator \"Check out the documentation to learn more advanced features!\"","title":"Step 3: Create Your First Script"},{"location":"getting-started/quick-start/#step-4-create-the-main-scene","text":"Create a new scene ( Scene \u2192 New Scene ) Add a Control node as root and save as Main.tscn Attach this script to the Control node: extends Control func _ready(): # Initialize Argode and load the script if ArgodeSystem: ArgodeSystem.load_and_play_script(\"res://scenarios/story.rgd\", \"start\") else: print(\"ArgodeSystem not found! Make sure it's in autoload.\")","title":"Step 4: Create the Main Scene"},{"location":"getting-started/quick-start/#step-5-set-as-main-scene","text":"Go to Project Settings Set Main Scene to your Main.tscn Press F5 to run your visual novel!","title":"Step 5: Set as Main Scene"},{"location":"getting-started/quick-start/#what-you-just-created","text":"Congratulations! You've created a complete visual novel with: \u2705 Character definitions with names and colors \u2705 Dialogue system with character portraits \u2705 Choice menus for player interaction \u2705 Scene transitions and background changes \u2705 Branching narrative with labels and jumps","title":"What You Just Created"},{"location":"getting-started/quick-start/#next-steps","text":"Ready to dive deeper? Explore these topics:","title":"Next Steps"},{"location":"getting-started/quick-start/#enhance-visuals","text":"Character expressions and positioning Background transitions and effects Custom UI themes","title":"\ud83c\udfa8 Enhance Visuals"},{"location":"getting-started/quick-start/#add-interactivity","text":"Variables and conditional logic Save/Load system Custom commands for effects","title":"\ud83c\udfaf Add Interactivity"},{"location":"getting-started/quick-start/#study-examples","text":"Simple Visual Novel Advanced Features Demo Best Practices Guide Having trouble? Check the Troubleshooting Guide or join our Discord community! Continue to Installation Details \u2192 View Script Reference \u2192","title":"\ud83d\udcda Study Examples"},{"location":"ja/","text":"Argode \u3078\u3088\u3046\u3053\u305d Argode \u306f\u3001 Godot Engine 4.0+ \u5411\u3051\u306b\u69cb\u7bc9\u3055\u308c\u305f\u5f37\u529b\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\u67d4\u8edf\u6027\u3068\u62e1\u5f35\u6027\u3092\u4fdd\u3061\u306a\u304c\u3089\u3001\u7f8e\u3057\u3044\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 \u2728 \u4e3b\u8981\u6a5f\u80fd \ud83c\udfaf \u8a2d\u8a08\u601d\u60f3 Argode\u306f \u30b7\u30f3\u30b0\u30eb\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u3092\u63a1\u7528\u3057\u3001 ArgodeSystem \u306e\u307f\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3068\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306f\u5b50\u30ce\u30fc\u30c9\u3068\u3057\u3066\u6574\u7406\u3055\u308c\u3001Godot\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30af\u30ea\u30fc\u30f3\u306a\u7d71\u5408\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002 \ud83c\udfac \u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b3\u30a2\u6a5f\u80fd RGD\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e : \u76f4\u611f\u7684\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u5411\u3051\u30b9\u30af\u30ea\u30d7\u30c8\u8a18\u6cd5 \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u30b7\u30b9\u30c6\u30e0 : \u8868\u60c5\u3068\u4f4d\u7f6e\u8a2d\u5b9a\u306b\u3088\u308b\u52d5\u7684\u306a\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u5b9a\u7fa9 \u80cc\u666f\u30fb\u30b7\u30fc\u30f3\u7ba1\u7406 : \u30b9\u30e0\u30fc\u30ba\u306a\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u3068\u30ec\u30a4\u30e4\u30fc\u30c9 \u30b7\u30fc\u30f3 \u9078\u629e\u80a2\u30e1\u30cb\u30e5\u30fc : \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u5206\u5c90\u30ca\u30e9\u30c6\u30a3\u30d6 \u30bb\u30fc\u30d6\u30fb\u30ed\u30fc\u30c9\u30b7\u30b9\u30c6\u30e0 : \u5b8c\u5168\u306a\u30b2\u30fc\u30e0\u30b9\u30c6\u30fc\u30c8\u7ba1\u7406 \ud83c\udfa8 \u9ad8\u5ea6\u306a\u6a5f\u80fd \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 : \u30b7\u30b0\u30ca\u30eb\u30d9\u30fc\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3088\u308b\u7121\u9650\u306e\u62e1\u5f35\u6027 \u5b9a\u7fa9\u30b7\u30b9\u30c6\u30e0 : \u30a2\u30bb\u30c3\u30c8\u3068\u5909\u6570\u306e\u4e00\u5143\u7ba1\u7406 \u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 : \u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u5272\u308a\u5f53\u3066\u306b\u3088\u308b\u67d4\u8edf\u306a\u30b7\u30fc\u30f3\u69cb\u9020 UI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af : \u8907\u96d1\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u305f\u3081\u306e\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u306aAdvScreen\u30b7\u30b9\u30c6\u30e0 \u30a2\u30bb\u30c3\u30c8\u7ba1\u7406 : \u30b9\u30de\u30fc\u30c8\u306a\u30d7\u30ea\u30ed\u30fc\u30c9\u3068\u30e1\u30e2\u30ea\u6700\u9069\u5316 \ud83d\udee0\ufe0f \u958b\u767a\u8005\u4f53\u9a13 \u30b7\u30f3\u30b0\u30eb\u30d5\u30a1\u30a4\u30eb\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 : \u30a2\u30c9\u30aa\u30f3\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3060\u3051\u3067\u3059\u3050\u306b\u958b\u59cb \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 : \u958b\u767a\u4e2d\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5373\u5ea7\u66f4\u65b0 Visual Studio Code \u30b5\u30dd\u30fc\u30c8 : \u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u62e1\u5f35\u304c\u5229\u7528\u53ef\u80fd \u5305\u62ec\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 : \u8a73\u7d30\u306a\u30ac\u30a4\u30c9\u3068API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 : \u5b9f\u7528\u7684\u306a\u5b9f\u88c5\u4f8b\u304b\u3089\u5b66\u7fd2 \ud83d\ude80 \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8 \u308f\u305a\u304b\u6570\u5206\u3067Argode\u3092\u59cb\u3081\u3089\u308c\u307e\u3059\uff1a # 1. ArgodeSystem\u3092\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u306b\u8ffd\u52a0 # 2. \u6700\u521d\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210 label start: narrator \"Argode\u3078\u3088\u3046\u3053\u305d\uff01\" \"\u3053\u308c\u304c\u3042\u306a\u305f\u306e\u6700\u521d\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b7\u30fc\u30f3\u3067\u3059\u3002\" menu: \"\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u7d9a\u3051\u308b\": jump next_scene \"Argode\u306b\u3064\u3044\u3066\u3082\u3063\u3068\u77e5\u308b\": jump tutorial \u4eca\u3059\u3050\u59cb\u3081\u308b \u2192 \u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b \u2192 \ud83d\udcda \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30bb\u30af\u30b7\u30e7\u30f3 :material-rocket-launch: \u306f\u3058\u3081\u306b \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30ac\u30a4\u30c9\u3001\u57fa\u672c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3001\u6700\u521d\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb :octicons-arrow-right-24: \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8 :material-architecture: \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 Argode\u306e\u8a2d\u8a08\u601d\u60f3\u3068\u30b3\u30a2\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a73\u7d30 :octicons-arrow-right-24: \u8a73\u7d30\u306f\u3053\u3061\u3089 :material-script: \u30b9\u30af\u30ea\u30d7\u30c8\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 RGD\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u5b8c\u5168\u306a\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3068\u30b5\u30f3\u30d7\u30eb\u4ed8\u304d\u30b3\u30de\u30f3\u30c9 :octicons-arrow-right-24: RGD \u30b7\u30f3\u30bf\u30c3\u30af\u30b9 :material-puzzle: \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 \u72ec\u81ea\u306e\u30b3\u30de\u30f3\u30c9\u3068\u30a8\u30d5\u30a7\u30af\u30c8\u3067Argode\u3092\u62e1\u5f35 :octicons-arrow-right-24: \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 :material-palette: UI\u30b7\u30b9\u30c6\u30e0 AdvScreen\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u7f8e\u3057\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u69cb\u7bc9 :octicons-arrow-right-24: UI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af :material-code-array: API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3059\u3079\u3066\u306eArgode\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5b8c\u5168\u306aAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 :octicons-arrow-right-24: API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \ud83c\udfae \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u3053\u308c\u3089\u306e\u30b5\u30f3\u30d7\u30eb\u5b9f\u88c5\u3067Argode\u306e\u5b9f\u969b\u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\uff1a \u30b7\u30f3\u30d7\u30eb\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb : \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3068\u9078\u629e\u80a2\u306e\u3042\u308b\u57fa\u672c\u7684\u306a\u30b9\u30c8\u30fc\u30ea\u30fc \u9ad8\u5ea6\u306a\u6a5f\u80fd\u30c7\u30e2 : \u9ad8\u5ea6\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u3068\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 \u30e2\u30d0\u30a4\u30eb\u6700\u9069\u5316 : \u30e2\u30d0\u30a4\u30eb\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30c3\u30d7\u30b9 \ud83e\udd1d \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fb\u30b5\u30dd\u30fc\u30c8 GitHub : AheadGameStudio/Argode Discord : \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30b5\u30fc\u30d0\u30fc\u306b\u53c2\u52a0 Issues : \u30d0\u30b0\u30ec\u30dd\u30fc\u30c8\u3068\u6a5f\u80fd\u30ea\u30af\u30a8\u30b9\u30c8 \ud83d\udcc4 \u30e9\u30a4\u30bb\u30f3\u30b9 Argode\u306f MIT \u30e9\u30a4\u30bb\u30f3\u30b9 \u306e\u4e0b\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5546\u7528\u30fb\u975e\u5546\u7528\u554f\u308f\u305a\u7121\u6599\u3067\u3054\u5229\u7528\u3044\u305f\u3060\u3051\u307e\u3059\u3002 \u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u3092\u4f5c\u6210\u3059\u308b\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304b\uff1f \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9\u304b\u3089\u59cb\u3081\u307e\u3057\u3087\u3046 \u2192","title":"Home"},{"location":"ja/#argode","text":"Argode \u306f\u3001 Godot Engine 4.0+ \u5411\u3051\u306b\u69cb\u7bc9\u3055\u308c\u305f\u5f37\u529b\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\u67d4\u8edf\u6027\u3068\u62e1\u5f35\u6027\u3092\u4fdd\u3061\u306a\u304c\u3089\u3001\u7f8e\u3057\u3044\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002","title":"Argode \u3078\u3088\u3046\u3053\u305d"},{"location":"ja/#_1","text":"\ud83c\udfaf \u8a2d\u8a08\u601d\u60f3 Argode\u306f \u30b7\u30f3\u30b0\u30eb\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u3092\u63a1\u7528\u3057\u3001 ArgodeSystem \u306e\u307f\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3068\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306f\u5b50\u30ce\u30fc\u30c9\u3068\u3057\u3066\u6574\u7406\u3055\u308c\u3001Godot\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30af\u30ea\u30fc\u30f3\u306a\u7d71\u5408\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002","title":"\u2728 \u4e3b\u8981\u6a5f\u80fd"},{"location":"ja/#_2","text":"RGD\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e : \u76f4\u611f\u7684\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u5411\u3051\u30b9\u30af\u30ea\u30d7\u30c8\u8a18\u6cd5 \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u30b7\u30b9\u30c6\u30e0 : \u8868\u60c5\u3068\u4f4d\u7f6e\u8a2d\u5b9a\u306b\u3088\u308b\u52d5\u7684\u306a\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u5b9a\u7fa9 \u80cc\u666f\u30fb\u30b7\u30fc\u30f3\u7ba1\u7406 : \u30b9\u30e0\u30fc\u30ba\u306a\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u3068\u30ec\u30a4\u30e4\u30fc\u30c9 \u30b7\u30fc\u30f3 \u9078\u629e\u80a2\u30e1\u30cb\u30e5\u30fc : \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u5206\u5c90\u30ca\u30e9\u30c6\u30a3\u30d6 \u30bb\u30fc\u30d6\u30fb\u30ed\u30fc\u30c9\u30b7\u30b9\u30c6\u30e0 : \u5b8c\u5168\u306a\u30b2\u30fc\u30e0\u30b9\u30c6\u30fc\u30c8\u7ba1\u7406","title":"\ud83c\udfac \u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b3\u30a2\u6a5f\u80fd"},{"location":"ja/#_3","text":"\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 : \u30b7\u30b0\u30ca\u30eb\u30d9\u30fc\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3088\u308b\u7121\u9650\u306e\u62e1\u5f35\u6027 \u5b9a\u7fa9\u30b7\u30b9\u30c6\u30e0 : \u30a2\u30bb\u30c3\u30c8\u3068\u5909\u6570\u306e\u4e00\u5143\u7ba1\u7406 \u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 : \u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u5272\u308a\u5f53\u3066\u306b\u3088\u308b\u67d4\u8edf\u306a\u30b7\u30fc\u30f3\u69cb\u9020 UI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af : \u8907\u96d1\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u305f\u3081\u306e\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u306aAdvScreen\u30b7\u30b9\u30c6\u30e0 \u30a2\u30bb\u30c3\u30c8\u7ba1\u7406 : \u30b9\u30de\u30fc\u30c8\u306a\u30d7\u30ea\u30ed\u30fc\u30c9\u3068\u30e1\u30e2\u30ea\u6700\u9069\u5316","title":"\ud83c\udfa8 \u9ad8\u5ea6\u306a\u6a5f\u80fd"},{"location":"ja/#_4","text":"\u30b7\u30f3\u30b0\u30eb\u30d5\u30a1\u30a4\u30eb\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 : \u30a2\u30c9\u30aa\u30f3\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3060\u3051\u3067\u3059\u3050\u306b\u958b\u59cb \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 : \u958b\u767a\u4e2d\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5373\u5ea7\u66f4\u65b0 Visual Studio Code \u30b5\u30dd\u30fc\u30c8 : \u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u62e1\u5f35\u304c\u5229\u7528\u53ef\u80fd \u5305\u62ec\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 : \u8a73\u7d30\u306a\u30ac\u30a4\u30c9\u3068API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 : \u5b9f\u7528\u7684\u306a\u5b9f\u88c5\u4f8b\u304b\u3089\u5b66\u7fd2","title":"\ud83d\udee0\ufe0f \u958b\u767a\u8005\u4f53\u9a13"},{"location":"ja/#_5","text":"\u308f\u305a\u304b\u6570\u5206\u3067Argode\u3092\u59cb\u3081\u3089\u308c\u307e\u3059\uff1a # 1. ArgodeSystem\u3092\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u306b\u8ffd\u52a0 # 2. \u6700\u521d\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210 label start: narrator \"Argode\u3078\u3088\u3046\u3053\u305d\uff01\" \"\u3053\u308c\u304c\u3042\u306a\u305f\u306e\u6700\u521d\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b7\u30fc\u30f3\u3067\u3059\u3002\" menu: \"\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u7d9a\u3051\u308b\": jump next_scene \"Argode\u306b\u3064\u3044\u3066\u3082\u3063\u3068\u77e5\u308b\": jump tutorial \u4eca\u3059\u3050\u59cb\u3081\u308b \u2192 \u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b \u2192","title":"\ud83d\ude80 \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8"},{"location":"ja/#_6","text":":material-rocket-launch: \u306f\u3058\u3081\u306b \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30ac\u30a4\u30c9\u3001\u57fa\u672c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3001\u6700\u521d\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb :octicons-arrow-right-24: \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8 :material-architecture: \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 Argode\u306e\u8a2d\u8a08\u601d\u60f3\u3068\u30b3\u30a2\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8a73\u7d30 :octicons-arrow-right-24: \u8a73\u7d30\u306f\u3053\u3061\u3089 :material-script: \u30b9\u30af\u30ea\u30d7\u30c8\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 RGD\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u5b8c\u5168\u306a\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3068\u30b5\u30f3\u30d7\u30eb\u4ed8\u304d\u30b3\u30de\u30f3\u30c9 :octicons-arrow-right-24: RGD \u30b7\u30f3\u30bf\u30c3\u30af\u30b9 :material-puzzle: \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 \u72ec\u81ea\u306e\u30b3\u30de\u30f3\u30c9\u3068\u30a8\u30d5\u30a7\u30af\u30c8\u3067Argode\u3092\u62e1\u5f35 :octicons-arrow-right-24: \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 :material-palette: UI\u30b7\u30b9\u30c6\u30e0 AdvScreen\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u7f8e\u3057\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u69cb\u7bc9 :octicons-arrow-right-24: UI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af :material-code-array: API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3059\u3079\u3066\u306eArgode\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5b8c\u5168\u306aAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 :octicons-arrow-right-24: API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","title":"\ud83d\udcda \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30bb\u30af\u30b7\u30e7\u30f3"},{"location":"ja/#_7","text":"\u3053\u308c\u3089\u306e\u30b5\u30f3\u30d7\u30eb\u5b9f\u88c5\u3067Argode\u306e\u5b9f\u969b\u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\uff1a \u30b7\u30f3\u30d7\u30eb\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb : \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3068\u9078\u629e\u80a2\u306e\u3042\u308b\u57fa\u672c\u7684\u306a\u30b9\u30c8\u30fc\u30ea\u30fc \u9ad8\u5ea6\u306a\u6a5f\u80fd\u30c7\u30e2 : \u9ad8\u5ea6\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u3068\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 \u30e2\u30d0\u30a4\u30eb\u6700\u9069\u5316 : \u30e2\u30d0\u30a4\u30eb\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30c3\u30d7\u30b9","title":"\ud83c\udfae \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8"},{"location":"ja/#_8","text":"GitHub : AheadGameStudio/Argode Discord : \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30b5\u30fc\u30d0\u30fc\u306b\u53c2\u52a0 Issues : \u30d0\u30b0\u30ec\u30dd\u30fc\u30c8\u3068\u6a5f\u80fd\u30ea\u30af\u30a8\u30b9\u30c8","title":"\ud83e\udd1d \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fb\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/#_9","text":"Argode\u306f MIT \u30e9\u30a4\u30bb\u30f3\u30b9 \u306e\u4e0b\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5546\u7528\u30fb\u975e\u5546\u7528\u554f\u308f\u305a\u7121\u6599\u3067\u3054\u5229\u7528\u3044\u305f\u3060\u3051\u307e\u3059\u3002 \u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u3092\u4f5c\u6210\u3059\u308b\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304b\uff1f \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9\u304b\u3089\u59cb\u3081\u307e\u3057\u3087\u3046 \u2192","title":"\ud83d\udcc4 \u30e9\u30a4\u30bb\u30f3\u30b9"},{"location":"ja/architecture/design-philosophy/","text":"\u8a2d\u8a08\u601d\u60f3 Argode\u306f \u62e1\u5f35\u6027 \u3001 \u67d4\u8edf\u6027 \u3001 \u958b\u767a\u8005\u306e\u5229\u4fbf\u6027 \u3092\u57fa\u76e4\u3068\u3057\u3066\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u3042\u3089\u3086\u308b\u5074\u9762\u3092\u5f62\u6210\u3059\u308b\u30b3\u30a2\u8a2d\u8a08\u539f\u5247\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \ud83c\udfd7\ufe0f \u30b7\u30f3\u30b0\u30eb\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u30af\u30ea\u30fc\u30f3\u306a\u7d71\u5408 Argode\u306f\u3001\u3042\u306a\u305f\u306eGodot\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b \u305f\u3060\u4e00\u3064\u306e\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3 \u3067\u3042\u308b ArgodeSystem \u306e\u307f\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\u4ed6\u306e\u3059\u3079\u3066\u306e\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306f\u5b50\u30ce\u30fc\u30c9\u3068\u3057\u3066\u6574\u7406\u3055\u308c\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u540d\u524d\u7a7a\u9593\u306e\u6c5a\u67d3\u3092\u6700\u5c0f\u9650\u306b\u6291\u3048\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30af\u30ea\u30fc\u30f3\u306a\u7d71\u5408\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002 graph TD A[ArgodeSystem] --> B[CharacterManager] A --> C[UIManager] A --> D[VariableManager] A --> E[LayerManager] A --> F[ScriptPlayer] A --> G[LabelRegistry] A --> H[CustomCommandHandler] style A fill:#e1f5fe style B fill:#f3e5f5 style C fill:#f3e5f5 style D fill:#f3e5f5 style E fill:#f3e5f5 style F fill:#f3e5f5 style G fill:#f3e5f5 style H fill:#f3e5f5 \u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u3088\u308a\u4ee5\u4e0b\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\uff1a \u4e88\u6e2c\u53ef\u80fd\u306a\u69cb\u9020 : \u3059\u3079\u3066\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u7c21\u5358\u306b\u767a\u898b\u3067\u304d\u308b \u7af6\u5408\u306a\u3057 : \u65e2\u5b58\u306e\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u3068\u306e\u5e72\u6e09\u306a\u3057 \u7c21\u5358\u306a\u30c7\u30d0\u30c3\u30b0 : \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u305f\u3081\u306e\u660e\u78ba\u306a\u968e\u5c64 \u30b7\u30f3\u30d7\u30eb\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 : \u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u3092\u4e00\u3064\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u6e96\u5099\u5b8c\u4e86 \ud83d\udcdd \u30b9\u30af\u30ea\u30d7\u30c8\u4e2d\u5fc3\u306e\u30a2\u30bb\u30c3\u30c8\u5b9a\u7fa9 \u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306b\u5f93\u3044\u3001 \u307b\u307c\u3059\u3079\u3066\u304c\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059 \u3002\u30e9\u30a4\u30bf\u30fc\u306f\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u4f5c\u696d\u3067\u304d\u3001\u8907\u96d1\u306a\u30a8\u30c7\u30a3\u30bf\u30fc\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u5fc5\u8981\u6027\u3092\u6e1b\u3089\u3057\u307e\u3059\u3002 \u5b9a\u7fa9\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8 # \u8868\u60c5\u3068\u8272\u4ed8\u304d\u30ad\u30e3\u30e9\u30af\u30bf\u30fc character alice \"\u30a2\u30ea\u30b9\" color=#ff69b4 character bob \"\u30dc\u30d6\" color=#4169e1 # \u30b9\u30de\u30fc\u30c8\u30d1\u30b9\u89e3\u6c7a\u4ed8\u304d\u753b\u50cf image bg_forest \"backgrounds/forest_day.jpg\" image alice_happy \"characters/alice/happy.png\" # \u30d7\u30ea\u30ed\u30fc\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u4ed8\u304d\u30aa\u30fc\u30c7\u30a3\u30aa audio bgm_main \"music/main_theme.ogg\" preload=true audio sfx_door \"sounds/door_open.wav\" # \u30a8\u30d5\u30a7\u30af\u30c8\u7528\u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0\u30fc shader screen_blur \"shaders/blur.gdshader\" \u30e1\u30ea\u30c3\u30c8 \u30e9\u30a4\u30bf\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc : \u8907\u96d1\u306aUI\u968e\u5c64\u306e\u30ca\u30d3\u30b2\u30fc\u30c8\u304c\u4e0d\u8981 \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406 : \u3059\u3079\u3066\u306e\u5b9a\u7fa9\u304c\u8ffd\u8de1\u53ef\u80fd\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb \u30d0\u30c3\u30c1\u64cd\u4f5c : \u30a2\u30bb\u30c3\u30c8\u306e\u540d\u524d\u5909\u66f4\u3001\u518d\u6574\u7406\u3001\u8907\u88fd\u304c\u7c21\u5358 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 : \u5b9a\u7fa9\u304c\u30a4\u30f3\u30e9\u30a4\u30f3\u6587\u66f8\u3068\u3057\u3066\u6a5f\u80fd \ud83c\udfaf \u7a76\u6975\u306e\u62e1\u5f35\u6027\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af Argode\u306e\u529b\u306e\u6838\u5fc3\u306f\u3001\u305d\u306e \u30b7\u30b0\u30ca\u30eb\u30d9\u30fc\u30b9\u62e1\u5f35\u30b7\u30b9\u30c6\u30e0 \u306b\u3042\u308a\u307e\u3059\u3002\u672a\u77e5\u306e\u30b3\u30de\u30f3\u30c9\u3084\u30bf\u30b0\u306f\u81ea\u52d5\u7684\u306b\u30b7\u30b0\u30ca\u30eb\u3068\u3057\u3066\u8ee2\u9001\u3055\u308c\u3001\u7121\u5236\u9650\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4ed5\u7d44\u307f sequenceDiagram participant S as \u30b9\u30af\u30ea\u30d7\u30c8\u30d7\u30ec\u30a4\u30e4\u30fc participant C as \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u30cf\u30f3\u30c9\u30e9\u30fc participant Y as \u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9 S->>S: \"particle_effect explosion\"\u3092\u89e3\u6790 S->>S: \u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u3067\u306f\u306a\u3044 S->>C: custom_command_executed\u30b7\u30b0\u30ca\u30eb\u3092\u767a\u884c C->>Y: \u767b\u9332\u3055\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u30fc\u306b\u8ee2\u9001 Y->>Y: \u30ab\u30b9\u30bf\u30e0\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c Y->>C: \u5b8c\u4e86\u3092\u30b7\u30b0\u30ca\u30eb\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09 C->>S: \u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u3092\u7d99\u7d9a \u5b9f\u88c5\u4f8b # \u3042\u306a\u305f\u306e\u30b2\u30fc\u30e0\u30b3\u30fc\u30c9\u5185 func _ready(): ArgodeSystem.ScriptPlayer.custom_command_executed.connect(_handle_custom_command) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"particle_effect\": var effect_name = parameters.get(\"arg0\", \"default\") spawn_particle_effect(effect_name) \"screen_shake\": var intensity = parameters.get(\"intensity\", 5.0) var duration = parameters.get(\"duration\", 0.5) shake_screen(intensity, duration) \u3053\u308c\u306b\u3088\u308a\u4ee5\u4e0b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff1a \u7121\u5236\u9650\u306e\u30b3\u30de\u30f3\u30c9 : \u60f3\u50cf\u3067\u304d\u308b\u3042\u3089\u3086\u308b\u30a8\u30d5\u30a7\u30af\u30c8\u3084\u6a5f\u80fd\u306e\u8ffd\u52a0 \u30b2\u30fc\u30e0\u56fa\u6709\u306e\u30ed\u30b8\u30c3\u30af : \u30e6\u30cb\u30fc\u30af\u306a\u30e1\u30ab\u30cb\u30af\u30b9\u3068\u306e\u7d71\u5408 \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30d7\u30e9\u30b0\u30a4\u30f3 : \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u3088\u308b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210 \u5c06\u6765\u3078\u306e\u5bfe\u5fdc : \u65b0\u6a5f\u80fd\u304c\u65e2\u5b58\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7834\u7dbb\u3055\u305b\u306a\u3044 \ud83e\udde0 \u4e88\u6e2c\u7684\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406 Argode\u306f\u8d77\u52d5\u6642\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u69cb\u9020\u5168\u4f53\u3092\u89e3\u6790\u3057\u3066 \u5236\u5fa1\u30d5\u30ed\u30fc\u30b0\u30e9\u30d5 \u3092\u69cb\u7bc9\u3057\u3001\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u30a2\u30bb\u30c3\u30c8\u30d7\u30ea\u30ed\u30fc\u30c9\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002 \u9759\u7684\u89e3\u6790 graph LR A[\u30b9\u30af\u30ea\u30d7\u30c8\u89e3\u6790] --> B[\u5236\u5fa1\u30d5\u30ed\u30fc\u30b0\u30e9\u30d5] B --> C[\u5230\u9054\u53ef\u80fd\u6027\u89e3\u6790] C --> D[\u30b9\u30de\u30fc\u30c8\u30d7\u30ea\u30ed\u30fc\u30c9] D --> E[\u30e1\u30e2\u30ea\u6700\u9069\u5316] style A fill:#e8f5e8 style E fill:#ffe8e8 \u30e1\u30ea\u30c3\u30c8 \u9ad8\u901f\u30ed\u30fc\u30c9 : \u5fc5\u8981\u306a\u6642\u306b\u30a2\u30bb\u30c3\u30c8\u304c\u77ac\u6642\u306b\u8868\u793a \u30e1\u30e2\u30ea\u52b9\u7387 : \u5fc5\u8981\u306a\u30a2\u30bb\u30c3\u30c8\u306e\u307f\u30e1\u30e2\u30ea\u306b\u4fdd\u6301 \u81ea\u52d5\u6700\u9069\u5316 : \u624b\u52d5\u30d7\u30ea\u30ed\u30fc\u30c9\u7ba1\u7406\u304c\u4e0d\u8981 \u5206\u5c90\u4e88\u6e2c : \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u9078\u629e\u5019\u88dc\u3092\u4e88\u6e2c \u4f8b label forest_scene: scene bg_forest with fade # \u2190 \u68ee\u306e\u80cc\u666f\u3092\u30d7\u30ea\u30ed\u30fc\u30c9 show alice happy at center # \u2190 alice_happy\u753b\u50cf\u3092\u30d7\u30ea\u30ed\u30fc\u30c9 alice \"\u63a2\u691c\u3057\u307e\u3057\u3087\u3046\uff01\" menu: \"\u68ee\u306e\u5965\u6df1\u304f\u3078\": # \u2190 deeper_forest\u30a2\u30bb\u30c3\u30c8\u3092\u30d7\u30ea\u30ed\u30fc\u30c9 jump deeper_forest \"\u6751\u3078\u623b\u308b\": # \u2190 village\u30a2\u30bb\u30c3\u30c8\u3092\u30d7\u30ea\u30ed\u30fc\u30c9 jump village_entrance \ud83c\udfa8 \u67d4\u8edf\u306a\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 Argode\u306f\u7279\u5b9a\u306e\u30b7\u30fc\u30f3\u69cb\u9020\u3092\u5f37\u5236\u3057\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b\u3001\u3069\u306eCanvasLayer\u304c\u3069\u306e\u76ee\u7684\u3092\u679c\u305f\u3059\u304b\u3092\u5b9a\u7fa9\u3059\u308b \u30ed\u30fc\u30eb\u30de\u30c3\u30d4\u30f3\u30b0 \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u5272\u308a\u5f53\u3066 # \u30e1\u30a4\u30f3\u30b7\u30fc\u30f3\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u5185 ArgodeSystem.LayerManager.setup_layer_roles({ \"background\": $BackgroundLayer, \"characters\": $CharacterLayer, \"ui\": $UILayer, \"effects\": $EffectsLayer }) \u9069\u5fdc\u6027 \u3053\u306e\u8a2d\u8a08\u306b\u3088\u308a\u4ee5\u4e0b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\uff1a \u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 : \u73fe\u5728\u306e\u30b7\u30fc\u30f3\u69cb\u9020\u3068\u306e\u7d71\u5408 \u30ab\u30b9\u30bf\u30e0\u30ec\u30a4\u30a2\u30a6\u30c8 : \u5fc5\u8981\u306a\u6570\u306e\u30ec\u30a4\u30e4\u30fc\u3092\u4f7f\u7528 \u8907\u96d1\u306a\u968e\u5c64 : \u30cd\u30b9\u30c8\u3055\u308c\u305fUI\u3068\u30a8\u30d5\u30a7\u30af\u30c8\u30ec\u30a4\u30e4\u30fc\u306e\u30b5\u30dd\u30fc\u30c8 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6700\u9069\u5316 : \u30e2\u30d0\u30a4\u30eb/\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u5411\u3051\u306e\u7570\u306a\u308b\u30ec\u30a4\u30e4\u30fc\u6226\u7565 \ud83d\udda5\ufe0f \u9ad8\u5ea6\u306aUI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af AdvScreen \u30b7\u30b9\u30c6\u30e0\u306f\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u30b7\u30b9\u30c6\u30e0\u3068\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u9023\u643a\u3067\u304d\u308b\u8907\u96d1\u306a\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u305f\u3081\u306e\u5805\u7262\u306a\u57fa\u76e4\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30b9\u30af\u30ea\u30fc\u30f3\u6a5f\u80fd extends AdvScreen func _ready(): # UI\u304b\u3089\u306e\u76f4\u63a5\u30b9\u30af\u30ea\u30d7\u30c8\u64cd\u4f5c call_script_label(\"character_info\") # \u30b9\u30c8\u30fc\u30ea\u30fc\u306b\u5f71\u97ff\u3059\u308b\u5909\u6570\u8a2d\u5b9a set_story_variable(\"viewed_profile\", true) # \u8907\u96d1\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u305f\u3081\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b9\u30bf\u30c3\u30af call_screen(\"inventory_detail\", {\"item_id\": \"magic_sword\"}) \u6a5f\u80fd \u30b9\u30af\u30ea\u30d7\u30c8\u7d71\u5408 : UI\u304c\u30b9\u30c8\u30fc\u30ea\u30fc\u30a4\u30d9\u30f3\u30c8\u3092\u30c8\u30ea\u30ac\u30fc\u53ef\u80fd \u30b9\u30af\u30ea\u30fc\u30f3\u30b9\u30bf\u30c3\u30af : \u30e2\u30fc\u30c0\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 \u30c7\u30fc\u30bf\u53d7\u3051\u6e21\u3057 : \u30b9\u30af\u30ea\u30fc\u30f3\u9593\u306e\u8c4a\u5bcc\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0 \u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u30c7\u30b6\u30a4\u30f3 : \u81ea\u52d5\u30ec\u30a4\u30a2\u30a6\u30c8\u9069\u5fdc \ud83d\udd04 \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3068\u958b\u767a\u4f53\u9a13 Argode\u306f \u8fc5\u901f\u306a\u53cd\u5fa9 \u3092\u5ff5\u982d\u306b\u8a2d\u8a08\u3055\u308c\u3001\u958b\u767a\u4e2d\u306e\u30e9\u30a4\u30d6\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 \u958b\u767a\u6a5f\u80fd \u30b9\u30af\u30ea\u30d7\u30c8\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 : \u518d\u8d77\u52d5\u306a\u3057\u3067\u5909\u66f4\u304c\u5373\u5ea7\u306b\u53cd\u6620 \u30e9\u30d9\u30eb\u30ec\u30b8\u30b9\u30c8\u30ea\u66f4\u65b0 : \u65b0\u3057\u3044\u30b7\u30fc\u30f3\u306e\u81ea\u52d5\u691c\u51fa \u5909\u6570\u691c\u67fb : \u30b9\u30c8\u30fc\u30ea\u30fc\u30b9\u30c6\u30fc\u30c8\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30c7\u30d0\u30c3\u30b0 \u30b3\u30de\u30f3\u30c9\u691c\u8a3c : \u69cb\u6587\u30a8\u30e9\u30fc\u306e\u5373\u5ea7\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af IDE\u7d71\u5408 VS Code\u62e1\u5f35 : .rgd \u30d5\u30a1\u30a4\u30eb\u306e\u5b8c\u5168\u306a\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8 IntelliSense\u30b5\u30dd\u30fc\u30c8 : \u30b3\u30de\u30f3\u30c9\u3068\u5909\u6570\u306e\u81ea\u52d5\u88dc\u5b8c \u30a8\u30e9\u30fc\u691c\u51fa : \u30b9\u30af\u30ea\u30d7\u30c8\u69cb\u6587\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u691c\u8a3c \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 : \u65b0\u3057\u3044\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u306e\u30af\u30a4\u30c3\u30af\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 \ud83c\udfaa \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u54f2\u5b66 Argode\u306f \u4f7f\u3044\u3084\u3059\u3055 \u3068 \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316 \u3092\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5fae\u8abf\u6574\u306b\u3088\u3063\u3066\u30d0\u30e9\u30f3\u30b9\u3057\u307e\u3059\u3002 \u30b9\u30de\u30fc\u30c8\u30c7\u30d5\u30a9\u30eb\u30c8 \u81ea\u52d5\u30c6\u30af\u30b9\u30c1\u30e3\u5f62\u5f0f\u9078\u629e \u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30df\u30f3\u30b0 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u30d9\u30fc\u30b9\u306e\u9069\u5fdc\u54c1\u8cea\u8a2d\u5b9a \u975e\u91cd\u8981\u30a2\u30bb\u30c3\u30c8\u306e\u9045\u5ef6\u30ed\u30fc\u30c9 \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30ce\u30d6 \u5fc5\u8981\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u305f\u3081\u306b\u3001Argode\u306f\u4ee5\u4e0b\u3092\u516c\u958b\u3057\u307e\u3059\uff1a \u624b\u52d5\u30e1\u30e2\u30ea\u7ba1\u7406\u5236\u5fa1 \u30ab\u30b9\u30bf\u30e0\u30a2\u30bb\u30c3\u30c8\u8aad\u307f\u8fbc\u307f\u6226\u7565 \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u30d5\u30c3\u30af \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u56fa\u6709\u306e\u6700\u9069\u5316 \u3053\u306e\u8a2d\u8a08\u601d\u60f3\u306b\u3088\u308a\u3001Argode\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u5171\u306b\u6210\u9577\u3057\u307e\u3059\u2014\u30b7\u30f3\u30d7\u30eb\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u304b\u3089\u3001\u30ab\u30b9\u30bf\u30e0\u30e1\u30ab\u30cb\u30af\u30b9\u3068\u9ad8\u5ea6\u306aUI\u30b7\u30b9\u30c6\u30e0\u3092\u6301\u3064\u8907\u96d1\u306a\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u4f53\u9a13\u307e\u3067\u3002 \u30b7\u30b9\u30c6\u30e0\u6982\u8981\u306b\u3064\u3044\u3066\u5b66\u3076 \u2192 \u30b3\u30a2\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u898b\u308b \u2192","title":"Design Philosophy"},{"location":"ja/architecture/design-philosophy/#_1","text":"Argode\u306f \u62e1\u5f35\u6027 \u3001 \u67d4\u8edf\u6027 \u3001 \u958b\u767a\u8005\u306e\u5229\u4fbf\u6027 \u3092\u57fa\u76e4\u3068\u3057\u3066\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u3042\u3089\u3086\u308b\u5074\u9762\u3092\u5f62\u6210\u3059\u308b\u30b3\u30a2\u8a2d\u8a08\u539f\u5247\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002","title":"\u8a2d\u8a08\u601d\u60f3"},{"location":"ja/architecture/design-philosophy/#_2","text":"\u30af\u30ea\u30fc\u30f3\u306a\u7d71\u5408 Argode\u306f\u3001\u3042\u306a\u305f\u306eGodot\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b \u305f\u3060\u4e00\u3064\u306e\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3 \u3067\u3042\u308b ArgodeSystem \u306e\u307f\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\u4ed6\u306e\u3059\u3079\u3066\u306e\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306f\u5b50\u30ce\u30fc\u30c9\u3068\u3057\u3066\u6574\u7406\u3055\u308c\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u540d\u524d\u7a7a\u9593\u306e\u6c5a\u67d3\u3092\u6700\u5c0f\u9650\u306b\u6291\u3048\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30af\u30ea\u30fc\u30f3\u306a\u7d71\u5408\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002 graph TD A[ArgodeSystem] --> B[CharacterManager] A --> C[UIManager] A --> D[VariableManager] A --> E[LayerManager] A --> F[ScriptPlayer] A --> G[LabelRegistry] A --> H[CustomCommandHandler] style A fill:#e1f5fe style B fill:#f3e5f5 style C fill:#f3e5f5 style D fill:#f3e5f5 style E fill:#f3e5f5 style F fill:#f3e5f5 style G fill:#f3e5f5 style H fill:#f3e5f5 \u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u3088\u308a\u4ee5\u4e0b\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\uff1a \u4e88\u6e2c\u53ef\u80fd\u306a\u69cb\u9020 : \u3059\u3079\u3066\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u7c21\u5358\u306b\u767a\u898b\u3067\u304d\u308b \u7af6\u5408\u306a\u3057 : \u65e2\u5b58\u306e\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u3068\u306e\u5e72\u6e09\u306a\u3057 \u7c21\u5358\u306a\u30c7\u30d0\u30c3\u30b0 : \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u305f\u3081\u306e\u660e\u78ba\u306a\u968e\u5c64 \u30b7\u30f3\u30d7\u30eb\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 : \u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u3092\u4e00\u3064\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u6e96\u5099\u5b8c\u4e86","title":"\ud83c\udfd7\ufe0f \u30b7\u30f3\u30b0\u30eb\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3"},{"location":"ja/architecture/design-philosophy/#_3","text":"\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306b\u5f93\u3044\u3001 \u307b\u307c\u3059\u3079\u3066\u304c\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059 \u3002\u30e9\u30a4\u30bf\u30fc\u306f\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u4f5c\u696d\u3067\u304d\u3001\u8907\u96d1\u306a\u30a8\u30c7\u30a3\u30bf\u30fc\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u5fc5\u8981\u6027\u3092\u6e1b\u3089\u3057\u307e\u3059\u3002","title":"\ud83d\udcdd \u30b9\u30af\u30ea\u30d7\u30c8\u4e2d\u5fc3\u306e\u30a2\u30bb\u30c3\u30c8\u5b9a\u7fa9"},{"location":"ja/architecture/design-philosophy/#_4","text":"# \u8868\u60c5\u3068\u8272\u4ed8\u304d\u30ad\u30e3\u30e9\u30af\u30bf\u30fc character alice \"\u30a2\u30ea\u30b9\" color=#ff69b4 character bob \"\u30dc\u30d6\" color=#4169e1 # \u30b9\u30de\u30fc\u30c8\u30d1\u30b9\u89e3\u6c7a\u4ed8\u304d\u753b\u50cf image bg_forest \"backgrounds/forest_day.jpg\" image alice_happy \"characters/alice/happy.png\" # \u30d7\u30ea\u30ed\u30fc\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u4ed8\u304d\u30aa\u30fc\u30c7\u30a3\u30aa audio bgm_main \"music/main_theme.ogg\" preload=true audio sfx_door \"sounds/door_open.wav\" # \u30a8\u30d5\u30a7\u30af\u30c8\u7528\u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0\u30fc shader screen_blur \"shaders/blur.gdshader\"","title":"\u5b9a\u7fa9\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8"},{"location":"ja/architecture/design-philosophy/#_5","text":"\u30e9\u30a4\u30bf\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc : \u8907\u96d1\u306aUI\u968e\u5c64\u306e\u30ca\u30d3\u30b2\u30fc\u30c8\u304c\u4e0d\u8981 \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406 : \u3059\u3079\u3066\u306e\u5b9a\u7fa9\u304c\u8ffd\u8de1\u53ef\u80fd\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb \u30d0\u30c3\u30c1\u64cd\u4f5c : \u30a2\u30bb\u30c3\u30c8\u306e\u540d\u524d\u5909\u66f4\u3001\u518d\u6574\u7406\u3001\u8907\u88fd\u304c\u7c21\u5358 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 : \u5b9a\u7fa9\u304c\u30a4\u30f3\u30e9\u30a4\u30f3\u6587\u66f8\u3068\u3057\u3066\u6a5f\u80fd","title":"\u30e1\u30ea\u30c3\u30c8"},{"location":"ja/architecture/design-philosophy/#_6","text":"Argode\u306e\u529b\u306e\u6838\u5fc3\u306f\u3001\u305d\u306e \u30b7\u30b0\u30ca\u30eb\u30d9\u30fc\u30b9\u62e1\u5f35\u30b7\u30b9\u30c6\u30e0 \u306b\u3042\u308a\u307e\u3059\u3002\u672a\u77e5\u306e\u30b3\u30de\u30f3\u30c9\u3084\u30bf\u30b0\u306f\u81ea\u52d5\u7684\u306b\u30b7\u30b0\u30ca\u30eb\u3068\u3057\u3066\u8ee2\u9001\u3055\u308c\u3001\u7121\u5236\u9650\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u3067\u3059\u3002","title":"\ud83c\udfaf \u7a76\u6975\u306e\u62e1\u5f35\u6027\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af"},{"location":"ja/architecture/design-philosophy/#_7","text":"sequenceDiagram participant S as \u30b9\u30af\u30ea\u30d7\u30c8\u30d7\u30ec\u30a4\u30e4\u30fc participant C as \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u30cf\u30f3\u30c9\u30e9\u30fc participant Y as \u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9 S->>S: \"particle_effect explosion\"\u3092\u89e3\u6790 S->>S: \u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u3067\u306f\u306a\u3044 S->>C: custom_command_executed\u30b7\u30b0\u30ca\u30eb\u3092\u767a\u884c C->>Y: \u767b\u9332\u3055\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u30fc\u306b\u8ee2\u9001 Y->>Y: \u30ab\u30b9\u30bf\u30e0\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c Y->>C: \u5b8c\u4e86\u3092\u30b7\u30b0\u30ca\u30eb\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09 C->>S: \u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u3092\u7d99\u7d9a","title":"\u4ed5\u7d44\u307f"},{"location":"ja/architecture/design-philosophy/#_8","text":"# \u3042\u306a\u305f\u306e\u30b2\u30fc\u30e0\u30b3\u30fc\u30c9\u5185 func _ready(): ArgodeSystem.ScriptPlayer.custom_command_executed.connect(_handle_custom_command) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"particle_effect\": var effect_name = parameters.get(\"arg0\", \"default\") spawn_particle_effect(effect_name) \"screen_shake\": var intensity = parameters.get(\"intensity\", 5.0) var duration = parameters.get(\"duration\", 0.5) shake_screen(intensity, duration) \u3053\u308c\u306b\u3088\u308a\u4ee5\u4e0b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff1a \u7121\u5236\u9650\u306e\u30b3\u30de\u30f3\u30c9 : \u60f3\u50cf\u3067\u304d\u308b\u3042\u3089\u3086\u308b\u30a8\u30d5\u30a7\u30af\u30c8\u3084\u6a5f\u80fd\u306e\u8ffd\u52a0 \u30b2\u30fc\u30e0\u56fa\u6709\u306e\u30ed\u30b8\u30c3\u30af : \u30e6\u30cb\u30fc\u30af\u306a\u30e1\u30ab\u30cb\u30af\u30b9\u3068\u306e\u7d71\u5408 \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30d7\u30e9\u30b0\u30a4\u30f3 : \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u3088\u308b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210 \u5c06\u6765\u3078\u306e\u5bfe\u5fdc : \u65b0\u6a5f\u80fd\u304c\u65e2\u5b58\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7834\u7dbb\u3055\u305b\u306a\u3044","title":"\u5b9f\u88c5\u4f8b"},{"location":"ja/architecture/design-philosophy/#_9","text":"Argode\u306f\u8d77\u52d5\u6642\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u69cb\u9020\u5168\u4f53\u3092\u89e3\u6790\u3057\u3066 \u5236\u5fa1\u30d5\u30ed\u30fc\u30b0\u30e9\u30d5 \u3092\u69cb\u7bc9\u3057\u3001\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u30a2\u30bb\u30c3\u30c8\u30d7\u30ea\u30ed\u30fc\u30c9\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002","title":"\ud83e\udde0 \u4e88\u6e2c\u7684\u30a2\u30bb\u30c3\u30c8\u7ba1\u7406"},{"location":"ja/architecture/design-philosophy/#_10","text":"graph LR A[\u30b9\u30af\u30ea\u30d7\u30c8\u89e3\u6790] --> B[\u5236\u5fa1\u30d5\u30ed\u30fc\u30b0\u30e9\u30d5] B --> C[\u5230\u9054\u53ef\u80fd\u6027\u89e3\u6790] C --> D[\u30b9\u30de\u30fc\u30c8\u30d7\u30ea\u30ed\u30fc\u30c9] D --> E[\u30e1\u30e2\u30ea\u6700\u9069\u5316] style A fill:#e8f5e8 style E fill:#ffe8e8","title":"\u9759\u7684\u89e3\u6790"},{"location":"ja/architecture/design-philosophy/#_11","text":"\u9ad8\u901f\u30ed\u30fc\u30c9 : \u5fc5\u8981\u306a\u6642\u306b\u30a2\u30bb\u30c3\u30c8\u304c\u77ac\u6642\u306b\u8868\u793a \u30e1\u30e2\u30ea\u52b9\u7387 : \u5fc5\u8981\u306a\u30a2\u30bb\u30c3\u30c8\u306e\u307f\u30e1\u30e2\u30ea\u306b\u4fdd\u6301 \u81ea\u52d5\u6700\u9069\u5316 : \u624b\u52d5\u30d7\u30ea\u30ed\u30fc\u30c9\u7ba1\u7406\u304c\u4e0d\u8981 \u5206\u5c90\u4e88\u6e2c : \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u9078\u629e\u5019\u88dc\u3092\u4e88\u6e2c","title":"\u30e1\u30ea\u30c3\u30c8"},{"location":"ja/architecture/design-philosophy/#_12","text":"label forest_scene: scene bg_forest with fade # \u2190 \u68ee\u306e\u80cc\u666f\u3092\u30d7\u30ea\u30ed\u30fc\u30c9 show alice happy at center # \u2190 alice_happy\u753b\u50cf\u3092\u30d7\u30ea\u30ed\u30fc\u30c9 alice \"\u63a2\u691c\u3057\u307e\u3057\u3087\u3046\uff01\" menu: \"\u68ee\u306e\u5965\u6df1\u304f\u3078\": # \u2190 deeper_forest\u30a2\u30bb\u30c3\u30c8\u3092\u30d7\u30ea\u30ed\u30fc\u30c9 jump deeper_forest \"\u6751\u3078\u623b\u308b\": # \u2190 village\u30a2\u30bb\u30c3\u30c8\u3092\u30d7\u30ea\u30ed\u30fc\u30c9 jump village_entrance","title":"\u4f8b"},{"location":"ja/architecture/design-philosophy/#_13","text":"Argode\u306f\u7279\u5b9a\u306e\u30b7\u30fc\u30f3\u69cb\u9020\u3092\u5f37\u5236\u3057\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b\u3001\u3069\u306eCanvasLayer\u304c\u3069\u306e\u76ee\u7684\u3092\u679c\u305f\u3059\u304b\u3092\u5b9a\u7fa9\u3059\u308b \u30ed\u30fc\u30eb\u30de\u30c3\u30d4\u30f3\u30b0 \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002","title":"\ud83c\udfa8 \u67d4\u8edf\u306a\u30ec\u30a4\u30e4\u30fc\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3"},{"location":"ja/architecture/design-philosophy/#_14","text":"# \u30e1\u30a4\u30f3\u30b7\u30fc\u30f3\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u5185 ArgodeSystem.LayerManager.setup_layer_roles({ \"background\": $BackgroundLayer, \"characters\": $CharacterLayer, \"ui\": $UILayer, \"effects\": $EffectsLayer })","title":"\u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u5272\u308a\u5f53\u3066"},{"location":"ja/architecture/design-philosophy/#_15","text":"\u3053\u306e\u8a2d\u8a08\u306b\u3088\u308a\u4ee5\u4e0b\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\uff1a \u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 : \u73fe\u5728\u306e\u30b7\u30fc\u30f3\u69cb\u9020\u3068\u306e\u7d71\u5408 \u30ab\u30b9\u30bf\u30e0\u30ec\u30a4\u30a2\u30a6\u30c8 : \u5fc5\u8981\u306a\u6570\u306e\u30ec\u30a4\u30e4\u30fc\u3092\u4f7f\u7528 \u8907\u96d1\u306a\u968e\u5c64 : \u30cd\u30b9\u30c8\u3055\u308c\u305fUI\u3068\u30a8\u30d5\u30a7\u30af\u30c8\u30ec\u30a4\u30e4\u30fc\u306e\u30b5\u30dd\u30fc\u30c8 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6700\u9069\u5316 : \u30e2\u30d0\u30a4\u30eb/\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u5411\u3051\u306e\u7570\u306a\u308b\u30ec\u30a4\u30e4\u30fc\u6226\u7565","title":"\u9069\u5fdc\u6027"},{"location":"ja/architecture/design-philosophy/#ui","text":"AdvScreen \u30b7\u30b9\u30c6\u30e0\u306f\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u30b7\u30b9\u30c6\u30e0\u3068\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u9023\u643a\u3067\u304d\u308b\u8907\u96d1\u306a\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u305f\u3081\u306e\u5805\u7262\u306a\u57fa\u76e4\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002","title":"\ud83d\udda5\ufe0f \u9ad8\u5ea6\u306aUI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af"},{"location":"ja/architecture/design-philosophy/#_16","text":"extends AdvScreen func _ready(): # UI\u304b\u3089\u306e\u76f4\u63a5\u30b9\u30af\u30ea\u30d7\u30c8\u64cd\u4f5c call_script_label(\"character_info\") # \u30b9\u30c8\u30fc\u30ea\u30fc\u306b\u5f71\u97ff\u3059\u308b\u5909\u6570\u8a2d\u5b9a set_story_variable(\"viewed_profile\", true) # \u8907\u96d1\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u305f\u3081\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b9\u30bf\u30c3\u30af call_screen(\"inventory_detail\", {\"item_id\": \"magic_sword\"})","title":"\u30b9\u30af\u30ea\u30fc\u30f3\u6a5f\u80fd"},{"location":"ja/architecture/design-philosophy/#_17","text":"\u30b9\u30af\u30ea\u30d7\u30c8\u7d71\u5408 : UI\u304c\u30b9\u30c8\u30fc\u30ea\u30fc\u30a4\u30d9\u30f3\u30c8\u3092\u30c8\u30ea\u30ac\u30fc\u53ef\u80fd \u30b9\u30af\u30ea\u30fc\u30f3\u30b9\u30bf\u30c3\u30af : \u30e2\u30fc\u30c0\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u3068\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 \u30c7\u30fc\u30bf\u53d7\u3051\u6e21\u3057 : \u30b9\u30af\u30ea\u30fc\u30f3\u9593\u306e\u8c4a\u5bcc\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0 \u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u30c7\u30b6\u30a4\u30f3 : \u81ea\u52d5\u30ec\u30a4\u30a2\u30a6\u30c8\u9069\u5fdc","title":"\u6a5f\u80fd"},{"location":"ja/architecture/design-philosophy/#_18","text":"Argode\u306f \u8fc5\u901f\u306a\u53cd\u5fa9 \u3092\u5ff5\u982d\u306b\u8a2d\u8a08\u3055\u308c\u3001\u958b\u767a\u4e2d\u306e\u30e9\u30a4\u30d6\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002","title":"\ud83d\udd04 \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u3068\u958b\u767a\u4f53\u9a13"},{"location":"ja/architecture/design-philosophy/#_19","text":"\u30b9\u30af\u30ea\u30d7\u30c8\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9 : \u518d\u8d77\u52d5\u306a\u3057\u3067\u5909\u66f4\u304c\u5373\u5ea7\u306b\u53cd\u6620 \u30e9\u30d9\u30eb\u30ec\u30b8\u30b9\u30c8\u30ea\u66f4\u65b0 : \u65b0\u3057\u3044\u30b7\u30fc\u30f3\u306e\u81ea\u52d5\u691c\u51fa \u5909\u6570\u691c\u67fb : \u30b9\u30c8\u30fc\u30ea\u30fc\u30b9\u30c6\u30fc\u30c8\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30c7\u30d0\u30c3\u30b0 \u30b3\u30de\u30f3\u30c9\u691c\u8a3c : \u69cb\u6587\u30a8\u30e9\u30fc\u306e\u5373\u5ea7\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af","title":"\u958b\u767a\u6a5f\u80fd"},{"location":"ja/architecture/design-philosophy/#ide","text":"VS Code\u62e1\u5f35 : .rgd \u30d5\u30a1\u30a4\u30eb\u306e\u5b8c\u5168\u306a\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8 IntelliSense\u30b5\u30dd\u30fc\u30c8 : \u30b3\u30de\u30f3\u30c9\u3068\u5909\u6570\u306e\u81ea\u52d5\u88dc\u5b8c \u30a8\u30e9\u30fc\u691c\u51fa : \u30b9\u30af\u30ea\u30d7\u30c8\u69cb\u6587\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u691c\u8a3c \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 : \u65b0\u3057\u3044\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u306e\u30af\u30a4\u30c3\u30af\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","title":"IDE\u7d71\u5408"},{"location":"ja/architecture/design-philosophy/#_20","text":"Argode\u306f \u4f7f\u3044\u3084\u3059\u3055 \u3068 \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316 \u3092\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5fae\u8abf\u6574\u306b\u3088\u3063\u3066\u30d0\u30e9\u30f3\u30b9\u3057\u307e\u3059\u3002","title":"\ud83c\udfaa \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u54f2\u5b66"},{"location":"ja/architecture/design-philosophy/#_21","text":"\u81ea\u52d5\u30c6\u30af\u30b9\u30c1\u30e3\u5f62\u5f0f\u9078\u629e \u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30df\u30f3\u30b0 \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u30d9\u30fc\u30b9\u306e\u9069\u5fdc\u54c1\u8cea\u8a2d\u5b9a \u975e\u91cd\u8981\u30a2\u30bb\u30c3\u30c8\u306e\u9045\u5ef6\u30ed\u30fc\u30c9","title":"\u30b9\u30de\u30fc\u30c8\u30c7\u30d5\u30a9\u30eb\u30c8"},{"location":"ja/architecture/design-philosophy/#_22","text":"\u5fc5\u8981\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u305f\u3081\u306b\u3001Argode\u306f\u4ee5\u4e0b\u3092\u516c\u958b\u3057\u307e\u3059\uff1a \u624b\u52d5\u30e1\u30e2\u30ea\u7ba1\u7406\u5236\u5fa1 \u30ab\u30b9\u30bf\u30e0\u30a2\u30bb\u30c3\u30c8\u8aad\u307f\u8fbc\u307f\u6226\u7565 \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u30d5\u30c3\u30af \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u56fa\u6709\u306e\u6700\u9069\u5316 \u3053\u306e\u8a2d\u8a08\u601d\u60f3\u306b\u3088\u308a\u3001Argode\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u5171\u306b\u6210\u9577\u3057\u307e\u3059\u2014\u30b7\u30f3\u30d7\u30eb\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u304b\u3089\u3001\u30ab\u30b9\u30bf\u30e0\u30e1\u30ab\u30cb\u30af\u30b9\u3068\u9ad8\u5ea6\u306aUI\u30b7\u30b9\u30c6\u30e0\u3092\u6301\u3064\u8907\u96d1\u306a\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u4f53\u9a13\u307e\u3067\u3002 \u30b7\u30b9\u30c6\u30e0\u6982\u8981\u306b\u3064\u3044\u3066\u5b66\u3076 \u2192 \u30b3\u30a2\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u898b\u308b \u2192","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30ce\u30d6"},{"location":"ja/custom-commands/overview/","text":"\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u6982\u8981 Argode\u306e\u6700\u3082\u5f37\u529b\u306a\u6a5f\u80fd\u306e\u4e00\u3064\u306f\u3001\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308b \u7121\u9650\u306e\u62e1\u5f35\u6027 \u3067\u3059\u3002\u7d44\u307f\u8fbc\u307f\u30b9\u30af\u30ea\u30d7\u30c8\u30d1\u30fc\u30b5\u30fc\u304c\u8a8d\u8b58\u3057\u306a\u3044\u30b3\u30de\u30f3\u30c9\u306f\u3001\u81ea\u52d5\u7684\u306b\u30b7\u30b0\u30ca\u30eb\u3068\u3057\u3066\u8ee2\u9001\u3055\u308c\u3001\u30b2\u30fc\u30e0\u56fa\u6709\u306e\u6a5f\u80fd\u3092\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002 \ud83c\udfaf \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u306e\u4ed5\u7d44\u307f Argode\u304c\u30b9\u30af\u30ea\u30d7\u30c8\u5185\u3067\u672a\u77e5\u306e\u30b3\u30de\u30f3\u30c9\u306b\u906d\u9047\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a graph TD A[\u30b9\u30af\u30ea\u30d7\u30c8\u884c\u3092\u89e3\u6790] --> B{\u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9?} B -->|\u306f\u3044| C[\u7d44\u307f\u8fbc\u307f\u5b9f\u884c] B -->|\u3044\u3044\u3048| D[\u30b3\u30de\u30f3\u30c9\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u62bd\u51fa] D --> E[custom_command_executed\u30b7\u30b0\u30ca\u30eb\u3092\u767a\u884c] E --> F[\u3042\u306a\u305f\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u30b7\u30b0\u30ca\u30eb\u3092\u53d7\u4fe1] F --> G[\u30ab\u30b9\u30bf\u30e0\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c] G --> H[\u30b9\u30af\u30ea\u30d7\u30c8\u7d99\u7d9a] style E fill:#e1f5fe style F fill:#f3e5f5 \ud83d\udcdd \u57fa\u672c\u4f8b \u753b\u9762\u63fa\u308c\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff1a \u30b9\u30af\u30ea\u30d7\u30c8\u5185 (story.rgd) label earthquake_scene: narrator \"\u5730\u9762\u304c\u63fa\u308c\u59cb\u3081\u308b\uff01\" screen_shake intensity=8.0 duration=2.0 narrator \"\u3059\u3054\u3044\u63fa\u308c\u3060\u3063\u305f\uff01\" \u30b3\u30fc\u30c9\u5185 (Main.gd) extends Control func _ready(): # \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u30b7\u30b0\u30ca\u30eb\u306b\u63a5\u7d9a ArgodeSystem.ScriptPlayer.custom_command_executed.connect(_handle_custom_command) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"screen_shake\": var intensity = parameters.get(\"intensity\", 5.0) var duration = parameters.get(\"duration\", 1.0) _shake_screen(intensity, duration) func _shake_screen(intensity: float, duration: float): var tween = create_tween() var original_position = global_position for i in range(int(duration * 60)): # 60 FPS var offset = Vector2( randf_range(-intensity, intensity), randf_range(-intensity, intensity) ) tween.tween_to(global_position + offset, 1.0/60.0) tween.tween_to(original_position, 0.1) \ud83d\udd27 \u30d1\u30e9\u30e1\u30fc\u30bf\u89e3\u6790 Argode\u306f\u8907\u6570\u306e\u5f62\u5f0f\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u81ea\u52d5\u89e3\u6790\u3057\u307e\u3059\uff1a \u30ad\u30fc\u30fb\u5024\u30d1\u30e9\u30e1\u30fc\u30bf particle_effect type=\"explosion\" x=100 y=200 scale=1.5 # parameters[\"type\"] = \"explosion\" # parameters[\"x\"] = 100 # parameters[\"y\"] = 200 # parameters[\"scale\"] = 1.5 \u4f4d\u7f6e\u30d1\u30e9\u30e1\u30fc\u30bf fade_to_color red 2.0 ease_in # parameters[\"arg0\"] = \"red\" # parameters[\"arg1\"] = 2.0 # parameters[\"arg2\"] = \"ease_in\" # parameters[\"_count\"] = 3 \u6df7\u5408\u30d1\u30e9\u30e1\u30fc\u30bf spawn_enemy goblin attack=15 x=300 magical=true # parameters[\"arg0\"] = \"goblin\" # parameters[\"attack\"] = 15 # parameters[\"x\"] = 300 # parameters[\"magical\"] = true \ud83c\udfae \u7d44\u307f\u8fbc\u307f\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 Argode\u306f\u3001\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u793a\u3059\u4e8b\u524d\u69cb\u7bc9\u3055\u308c\u305f\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u542b\u3093\u3067\u3044\u307e\u3059\uff1a \u30a6\u30a3\u30f3\u30c9\u30a6\u30a8\u30d5\u30a7\u30af\u30c8 window shake intensity=5.0 duration=0.5 window fullscreen toggle window resize 1280 720 \u30b9\u30af\u30ea\u30fc\u30f3\u30a8\u30d5\u30a7\u30af\u30c8 screen_tint color=#ff0000 intensity=0.3 duration=1.0 screen_flash color=#ffffff duration=0.1 screen_blur intensity=2.0 duration=0.5 \u9ad8\u5ea6\u306a\u30a8\u30d5\u30a7\u30af\u30c8 particle_effect explosion x=400 y=300 camera_shake intensity=3.0 duration=1.5 layer_tint background color=#0066cc intensity=0.5 \u3059\u3079\u3066\u306e\u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u3092\u898b\u308b \u2192 \u26a1 \u540c\u671f vs \u975e\u540c\u671f\u30b3\u30de\u30f3\u30c9 \u30b3\u30de\u30f3\u30c9\u306f \u540c\u671f \uff08\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u3092\u30d6\u30ed\u30c3\u30af\uff09\u307e\u305f\u306f \u975e\u540c\u671f \uff08\u4e26\u884c\u5b9f\u884c\uff09\u306e\u3069\u3061\u3089\u3067\u3082\u53ef\u80fd\u3067\u3059\uff1a \u975e\u540c\u671f\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09 func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"play_sound\": # \u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5373\u5ea7\u306b\u7d99\u7d9a audio_player.play_sound(parameters.get(\"file\")) \u540c\u671f func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"wait\": # \u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5b8c\u4e86\u307e\u3067\u5f85\u6a5f var duration = parameters.get(\"duration\", 1.0) await get_tree().create_timer(duration).timeout ArgodeSystem.CustomCommandHandler.synchronous_command_completed.emit() \ud83c\udfa8 \u9ad8\u5ea6\u306a\u4f7f\u7528\u4f8b \u30b2\u30fc\u30e0\u30e1\u30ab\u30cb\u30af\u30b9\u7d71\u5408 # RPG\u98a8\u30b3\u30de\u30f3\u30c9 add_item \"Magic Sword\" quantity=1 gain_experience 250 level_up_check # \u30a4\u30f3\u30d9\u30f3\u30c8\u30ea\u7ba1\u7406 show_inventory category=\"weapons\" equip_item \"Magic Sword\" \u30d3\u30b8\u30e5\u30a2\u30eb\u30a8\u30d5\u30a7\u30af\u30c8 # \u8907\u96d1\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3 animate_character alice slide_in from=left duration=0.8 easing=bounce morph_background from=day to=night duration=3.0 create_weather rain intensity=0.7 \u30ab\u30b9\u30bf\u30e0UI # \u30df\u30cb\u30b2\u30fc\u30e0\u3068\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u8981\u7d20 start_minigame \"puzzle_box\" difficulty=3 show_map location=\"forest\" interactive=true display_stats character=\"alice\" style=\"detailed\" \ud83d\udcda \u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 1. \u4e00\u8cab\u3057\u305f\u547d\u540d \u660e\u78ba\u3067\u8aac\u660e\u7684\u306a\u30b3\u30de\u30f3\u30c9\u540d\u3092\u4f7f\u7528\uff1a \u2705 screen_shake intensity=5.0 \u2705 play_music \"battle_theme\" volume=0.8 \u274c shake 5 \u274c music battle_theme 2. \u30d1\u30e9\u30e1\u30fc\u30bf\u691c\u8a3c \u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u5e38\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u691c\u8a3c\uff1a func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"screen_shake\": var intensity = clamp(parameters.get(\"intensity\", 5.0), 0.1, 50.0) var duration = clamp(parameters.get(\"duration\", 1.0), 0.1, 10.0) _shake_screen(intensity, duration) 3. \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 \u610f\u5473\u306e\u3042\u308b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63d0\u4f9b\uff1a func _handle_play_sound(parameters: Dictionary): var file = parameters.get(\"file\", \"\") if file.is_empty(): push_error(\"play_sound\u30b3\u30de\u30f3\u30c9\u306b\u306f'file'\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5fc5\u8981\u3067\u3059\") return if not FileAccess.file_exists(\"res://audio/\" + file): push_error(\"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093: \" + file) return audio_player.stream = load(\"res://audio/\" + file) audio_player.play() 4. \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316 \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u6587\u66f8\u5316\uff1a ## \u6307\u5b9a\u3055\u308c\u305f\u5f37\u5ea6\u3068\u7d99\u7d9a\u6642\u9593\u3067\u753b\u9762\u3092\u63fa\u3089\u3059 ## \u30d1\u30e9\u30e1\u30fc\u30bf: ## intensity (float): \u63fa\u308c\u306e\u5f37\u3055 (0.1 - 50.0, \u30c7\u30d5\u30a9\u30eb\u30c8: 5.0) ## duration (float): \u63fa\u308c\u306e\u7d99\u7d9a\u6642\u9593(\u79d2) (0.1 - 10.0, \u30c7\u30d5\u30a9\u30eb\u30c8: 1.0) ## \u4f8b: screen_shake intensity=3.0 duration=0.8 func _handle_screen_shake(parameters: Dictionary): # \u5b9f\u88c5... \ud83d\ude80 \u6b21\u306e\u30b9\u30c6\u30c3\u30d7 \u72ec\u81ea\u306e\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304b\uff1f \u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 : \u5229\u7528\u53ef\u80fd\u306a\u3059\u3079\u3066\u306e\u30b3\u30de\u30f3\u30c9\u3092\u78ba\u8a8d \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u4f5c\u6210 : \u30b9\u30c6\u30c3\u30d7\u30d0\u30a4\u30b9\u30c6\u30c3\u30d7\u5b9f\u88c5\u30ac\u30a4\u30c9 \u9ad8\u5ea6\u306a\u30d1\u30bf\u30fc\u30f3 : \u8907\u96d1\u306a\u30b3\u30de\u30f3\u30c9\u4f8b \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308aArgode\u306f\u7121\u9650\u306b\u62e1\u5f35\u53ef\u80fd\u3067\u3059\u2014\u30b7\u30f3\u30d7\u30eb\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u304b\u3089\u8907\u96d1\u306a\u30b2\u30fc\u30e0\u30e1\u30ab\u30cb\u30af\u30b9\u307e\u3067\u3001\u4f55\u3067\u3082\u53ef\u80fd\u3067\u3059\uff01 \u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u3092\u898b\u308b \u2192 \u72ec\u81ea\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u308b \u2192","title":"Overview"},{"location":"ja/custom-commands/overview/#_1","text":"Argode\u306e\u6700\u3082\u5f37\u529b\u306a\u6a5f\u80fd\u306e\u4e00\u3064\u306f\u3001\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308b \u7121\u9650\u306e\u62e1\u5f35\u6027 \u3067\u3059\u3002\u7d44\u307f\u8fbc\u307f\u30b9\u30af\u30ea\u30d7\u30c8\u30d1\u30fc\u30b5\u30fc\u304c\u8a8d\u8b58\u3057\u306a\u3044\u30b3\u30de\u30f3\u30c9\u306f\u3001\u81ea\u52d5\u7684\u306b\u30b7\u30b0\u30ca\u30eb\u3068\u3057\u3066\u8ee2\u9001\u3055\u308c\u3001\u30b2\u30fc\u30e0\u56fa\u6709\u306e\u6a5f\u80fd\u3092\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002","title":"\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u6982\u8981"},{"location":"ja/custom-commands/overview/#_2","text":"Argode\u304c\u30b9\u30af\u30ea\u30d7\u30c8\u5185\u3067\u672a\u77e5\u306e\u30b3\u30de\u30f3\u30c9\u306b\u906d\u9047\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a graph TD A[\u30b9\u30af\u30ea\u30d7\u30c8\u884c\u3092\u89e3\u6790] --> B{\u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9?} B -->|\u306f\u3044| C[\u7d44\u307f\u8fbc\u307f\u5b9f\u884c] B -->|\u3044\u3044\u3048| D[\u30b3\u30de\u30f3\u30c9\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u62bd\u51fa] D --> E[custom_command_executed\u30b7\u30b0\u30ca\u30eb\u3092\u767a\u884c] E --> F[\u3042\u306a\u305f\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u30b7\u30b0\u30ca\u30eb\u3092\u53d7\u4fe1] F --> G[\u30ab\u30b9\u30bf\u30e0\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c] G --> H[\u30b9\u30af\u30ea\u30d7\u30c8\u7d99\u7d9a] style E fill:#e1f5fe style F fill:#f3e5f5","title":"\ud83c\udfaf \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u306e\u4ed5\u7d44\u307f"},{"location":"ja/custom-commands/overview/#_3","text":"\u753b\u9762\u63fa\u308c\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff1a","title":"\ud83d\udcdd \u57fa\u672c\u4f8b"},{"location":"ja/custom-commands/overview/#storyrgd","text":"label earthquake_scene: narrator \"\u5730\u9762\u304c\u63fa\u308c\u59cb\u3081\u308b\uff01\" screen_shake intensity=8.0 duration=2.0 narrator \"\u3059\u3054\u3044\u63fa\u308c\u3060\u3063\u305f\uff01\"","title":"\u30b9\u30af\u30ea\u30d7\u30c8\u5185 (story.rgd)"},{"location":"ja/custom-commands/overview/#maingd","text":"extends Control func _ready(): # \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u30b7\u30b0\u30ca\u30eb\u306b\u63a5\u7d9a ArgodeSystem.ScriptPlayer.custom_command_executed.connect(_handle_custom_command) func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"screen_shake\": var intensity = parameters.get(\"intensity\", 5.0) var duration = parameters.get(\"duration\", 1.0) _shake_screen(intensity, duration) func _shake_screen(intensity: float, duration: float): var tween = create_tween() var original_position = global_position for i in range(int(duration * 60)): # 60 FPS var offset = Vector2( randf_range(-intensity, intensity), randf_range(-intensity, intensity) ) tween.tween_to(global_position + offset, 1.0/60.0) tween.tween_to(original_position, 0.1)","title":"\u30b3\u30fc\u30c9\u5185 (Main.gd)"},{"location":"ja/custom-commands/overview/#_4","text":"Argode\u306f\u8907\u6570\u306e\u5f62\u5f0f\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u81ea\u52d5\u89e3\u6790\u3057\u307e\u3059\uff1a","title":"\ud83d\udd27 \u30d1\u30e9\u30e1\u30fc\u30bf\u89e3\u6790"},{"location":"ja/custom-commands/overview/#_5","text":"particle_effect type=\"explosion\" x=100 y=200 scale=1.5 # parameters[\"type\"] = \"explosion\" # parameters[\"x\"] = 100 # parameters[\"y\"] = 200 # parameters[\"scale\"] = 1.5","title":"\u30ad\u30fc\u30fb\u5024\u30d1\u30e9\u30e1\u30fc\u30bf"},{"location":"ja/custom-commands/overview/#_6","text":"fade_to_color red 2.0 ease_in # parameters[\"arg0\"] = \"red\" # parameters[\"arg1\"] = 2.0 # parameters[\"arg2\"] = \"ease_in\" # parameters[\"_count\"] = 3","title":"\u4f4d\u7f6e\u30d1\u30e9\u30e1\u30fc\u30bf"},{"location":"ja/custom-commands/overview/#_7","text":"spawn_enemy goblin attack=15 x=300 magical=true # parameters[\"arg0\"] = \"goblin\" # parameters[\"attack\"] = 15 # parameters[\"x\"] = 300 # parameters[\"magical\"] = true","title":"\u6df7\u5408\u30d1\u30e9\u30e1\u30fc\u30bf"},{"location":"ja/custom-commands/overview/#_8","text":"Argode\u306f\u3001\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u793a\u3059\u4e8b\u524d\u69cb\u7bc9\u3055\u308c\u305f\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u542b\u3093\u3067\u3044\u307e\u3059\uff1a","title":"\ud83c\udfae \u7d44\u307f\u8fbc\u307f\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9"},{"location":"ja/custom-commands/overview/#_9","text":"window shake intensity=5.0 duration=0.5 window fullscreen toggle window resize 1280 720","title":"\u30a6\u30a3\u30f3\u30c9\u30a6\u30a8\u30d5\u30a7\u30af\u30c8"},{"location":"ja/custom-commands/overview/#_10","text":"screen_tint color=#ff0000 intensity=0.3 duration=1.0 screen_flash color=#ffffff duration=0.1 screen_blur intensity=2.0 duration=0.5","title":"\u30b9\u30af\u30ea\u30fc\u30f3\u30a8\u30d5\u30a7\u30af\u30c8"},{"location":"ja/custom-commands/overview/#_11","text":"particle_effect explosion x=400 y=300 camera_shake intensity=3.0 duration=1.5 layer_tint background color=#0066cc intensity=0.5 \u3059\u3079\u3066\u306e\u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u3092\u898b\u308b \u2192","title":"\u9ad8\u5ea6\u306a\u30a8\u30d5\u30a7\u30af\u30c8"},{"location":"ja/custom-commands/overview/#vs","text":"\u30b3\u30de\u30f3\u30c9\u306f \u540c\u671f \uff08\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u3092\u30d6\u30ed\u30c3\u30af\uff09\u307e\u305f\u306f \u975e\u540c\u671f \uff08\u4e26\u884c\u5b9f\u884c\uff09\u306e\u3069\u3061\u3089\u3067\u3082\u53ef\u80fd\u3067\u3059\uff1a","title":"\u26a1 \u540c\u671f vs \u975e\u540c\u671f\u30b3\u30de\u30f3\u30c9"},{"location":"ja/custom-commands/overview/#_12","text":"func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"play_sound\": # \u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5373\u5ea7\u306b\u7d99\u7d9a audio_player.play_sound(parameters.get(\"file\"))","title":"\u975e\u540c\u671f\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09"},{"location":"ja/custom-commands/overview/#_13","text":"func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"wait\": # \u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5b8c\u4e86\u307e\u3067\u5f85\u6a5f var duration = parameters.get(\"duration\", 1.0) await get_tree().create_timer(duration).timeout ArgodeSystem.CustomCommandHandler.synchronous_command_completed.emit()","title":"\u540c\u671f"},{"location":"ja/custom-commands/overview/#_14","text":"","title":"\ud83c\udfa8 \u9ad8\u5ea6\u306a\u4f7f\u7528\u4f8b"},{"location":"ja/custom-commands/overview/#_15","text":"# RPG\u98a8\u30b3\u30de\u30f3\u30c9 add_item \"Magic Sword\" quantity=1 gain_experience 250 level_up_check # \u30a4\u30f3\u30d9\u30f3\u30c8\u30ea\u7ba1\u7406 show_inventory category=\"weapons\" equip_item \"Magic Sword\"","title":"\u30b2\u30fc\u30e0\u30e1\u30ab\u30cb\u30af\u30b9\u7d71\u5408"},{"location":"ja/custom-commands/overview/#_16","text":"# \u8907\u96d1\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3 animate_character alice slide_in from=left duration=0.8 easing=bounce morph_background from=day to=night duration=3.0 create_weather rain intensity=0.7","title":"\u30d3\u30b8\u30e5\u30a2\u30eb\u30a8\u30d5\u30a7\u30af\u30c8"},{"location":"ja/custom-commands/overview/#ui","text":"# \u30df\u30cb\u30b2\u30fc\u30e0\u3068\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u8981\u7d20 start_minigame \"puzzle_box\" difficulty=3 show_map location=\"forest\" interactive=true display_stats character=\"alice\" style=\"detailed\"","title":"\u30ab\u30b9\u30bf\u30e0UI"},{"location":"ja/custom-commands/overview/#_17","text":"","title":"\ud83d\udcda \u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9"},{"location":"ja/custom-commands/overview/#1","text":"\u660e\u78ba\u3067\u8aac\u660e\u7684\u306a\u30b3\u30de\u30f3\u30c9\u540d\u3092\u4f7f\u7528\uff1a \u2705 screen_shake intensity=5.0 \u2705 play_music \"battle_theme\" volume=0.8 \u274c shake 5 \u274c music battle_theme","title":"1. \u4e00\u8cab\u3057\u305f\u547d\u540d"},{"location":"ja/custom-commands/overview/#2","text":"\u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u5e38\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u691c\u8a3c\uff1a func _handle_custom_command(command_name: String, parameters: Dictionary, line: String): match command_name: \"screen_shake\": var intensity = clamp(parameters.get(\"intensity\", 5.0), 0.1, 50.0) var duration = clamp(parameters.get(\"duration\", 1.0), 0.1, 10.0) _shake_screen(intensity, duration)","title":"2. \u30d1\u30e9\u30e1\u30fc\u30bf\u691c\u8a3c"},{"location":"ja/custom-commands/overview/#3","text":"\u610f\u5473\u306e\u3042\u308b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63d0\u4f9b\uff1a func _handle_play_sound(parameters: Dictionary): var file = parameters.get(\"file\", \"\") if file.is_empty(): push_error(\"play_sound\u30b3\u30de\u30f3\u30c9\u306b\u306f'file'\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5fc5\u8981\u3067\u3059\") return if not FileAccess.file_exists(\"res://audio/\" + file): push_error(\"\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093: \" + file) return audio_player.stream = load(\"res://audio/\" + file) audio_player.play()","title":"3. \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0"},{"location":"ja/custom-commands/overview/#4","text":"\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u6587\u66f8\u5316\uff1a ## \u6307\u5b9a\u3055\u308c\u305f\u5f37\u5ea6\u3068\u7d99\u7d9a\u6642\u9593\u3067\u753b\u9762\u3092\u63fa\u3089\u3059 ## \u30d1\u30e9\u30e1\u30fc\u30bf: ## intensity (float): \u63fa\u308c\u306e\u5f37\u3055 (0.1 - 50.0, \u30c7\u30d5\u30a9\u30eb\u30c8: 5.0) ## duration (float): \u63fa\u308c\u306e\u7d99\u7d9a\u6642\u9593(\u79d2) (0.1 - 10.0, \u30c7\u30d5\u30a9\u30eb\u30c8: 1.0) ## \u4f8b: screen_shake intensity=3.0 duration=0.8 func _handle_screen_shake(parameters: Dictionary): # \u5b9f\u88c5...","title":"4. \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316"},{"location":"ja/custom-commands/overview/#_18","text":"\u72ec\u81ea\u306e\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304b\uff1f \u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 : \u5229\u7528\u53ef\u80fd\u306a\u3059\u3079\u3066\u306e\u30b3\u30de\u30f3\u30c9\u3092\u78ba\u8a8d \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u4f5c\u6210 : \u30b9\u30c6\u30c3\u30d7\u30d0\u30a4\u30b9\u30c6\u30c3\u30d7\u5b9f\u88c5\u30ac\u30a4\u30c9 \u9ad8\u5ea6\u306a\u30d1\u30bf\u30fc\u30f3 : \u8907\u96d1\u306a\u30b3\u30de\u30f3\u30c9\u4f8b \u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u308aArgode\u306f\u7121\u9650\u306b\u62e1\u5f35\u53ef\u80fd\u3067\u3059\u2014\u30b7\u30f3\u30d7\u30eb\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u304b\u3089\u8907\u96d1\u306a\u30b2\u30fc\u30e0\u30e1\u30ab\u30cb\u30af\u30b9\u307e\u3067\u3001\u4f55\u3067\u3082\u53ef\u80fd\u3067\u3059\uff01 \u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u3092\u898b\u308b \u2192 \u72ec\u81ea\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u308b \u2192","title":"\ud83d\ude80 \u6b21\u306e\u30b9\u30c6\u30c3\u30d7"},{"location":"ja/getting-started/quick-start/","text":"\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u308f\u305a\u304b\u6570\u5206\u3067Argode\u3092\u52d5\u304b\u3057\u307e\u3057\u3087\u3046\uff01\u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001\u6700\u521d\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b7\u30fc\u30f3\u306e\u4f5c\u6210\u65b9\u6cd5\u3092\u3054\u6848\u5185\u3057\u307e\u3059\u3002 \u524d\u63d0\u6761\u4ef6 Godot Engine 4.0+ ( \u3053\u3061\u3089\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 ) Godot\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u7684\u306a\u77e5\u8b58 \u30b9\u30c6\u30c3\u30d7 1: Argode\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30aa\u30d7\u30b7\u30e7\u30f3 A: AssetLib\u304b\u3089\uff08\u63a8\u5968\uff09 Godot Engine\u3092\u958b\u304f AssetLib \u30bf\u30d6\u306b\u79fb\u52d5 \"Argode\" \u3092\u691c\u7d22 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u3057\u3066 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3092\u30af\u30ea\u30c3\u30af \u30aa\u30d7\u30b7\u30e7\u30f3 B: \u624b\u52d5\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb GitHub \u304b\u3089\u6700\u65b0\u30ea\u30ea\u30fc\u30b9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 addons/argode/ \u30d5\u30a9\u30eb\u30c0\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5c55\u958b \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a \u2192 \u30d7\u30e9\u30b0\u30a4\u30f3 \u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u6709\u52b9\u5316 \u30b9\u30c6\u30c3\u30d7 2: \u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u306e\u8a2d\u5b9a \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a \u3092\u958b\u304f\uff08 Project \u2192 Project Settings \uff09 \u30aa\u30fc\u30c8\u30ed\u30fc\u30c9 \u30bf\u30d6\u306b\u79fb\u52d5 ArgodeSystem \u3092\u8ffd\u52a0\uff1a \u30d1\u30b9 : res://addons/argode/core/ArgodeSystem.gd \u30ce\u30fc\u30c9\u540d : ArgodeSystem \u6709\u52b9 \u306b\u30c1\u30a7\u30c3\u30af \u30b9\u30c6\u30c3\u30d7 3: \u6700\u521d\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210 \u65b0\u3057\u3044\u30d5\u30a1\u30a4\u30eb scenarios/story.rgd \u3092\u4f5c\u6210\uff1a # story.rgd - \u3042\u306a\u305f\u306e\u6700\u521d\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b9\u30af\u30ea\u30d7\u30c8 # \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3092\u5b9a\u7fa9 character narrator \"\u30ca\u30ec\u30fc\u30bf\u30fc\" color=#ffffff character alice \"\u30a2\u30ea\u30b9\" color=#ff69b4 label start: narrator \"\u3042\u306a\u305f\u306e\u6700\u521d\u306eArgode\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u3078\u3088\u3046\u3053\u305d\uff01\" show alice happy at center with fade alice \"\u3053\u3093\u306b\u3061\u306f\uff01\u79c1\u306f\u30a2\u30ea\u30b9\u3001\u3053\u306e\u65b0\u3057\u3044\u4e16\u754c\u3078\u306e\u30ac\u30a4\u30c9\u3067\u3059\u3002\" alice \"\u307e\u305a\u4f55\u3092\u3057\u305f\u3044\u3067\u3059\u304b\uff1f\" menu: \"\u30b9\u30c8\u30fc\u30ea\u30fc\u306b\u3064\u3044\u3066\u5b66\u3076\": jump learn_story \"\u4e16\u754c\u3092\u63a2\u691c\u3059\u308b\": jump explore_world \"\u4ed6\u306e\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306b\u4f1a\u3046\": jump meet_characters label learn_story: alice \"\u3053\u3053\u304b\u3089\u3042\u306a\u305f\u306e\u7d20\u6674\u3089\u3057\u3044\u30b9\u30c8\u30fc\u30ea\u30fc\u304c\u59cb\u307e\u308a\u307e\u3059\uff01\" alice \"\u5206\u5c90\u30d1\u30b9\u3092\u6301\u3064\u8907\u96d1\u306a\u7269\u8a9e\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\" narrator \"'jump'\u3092\u4f7f\u3063\u3066\u30b9\u30c8\u30fc\u30ea\u30fc\u30bb\u30af\u30b7\u30e7\u30f3\u9593\u3092\u79fb\u52d5\u3057\u307e\u3059\u3002\" jump continue_story label explore_world: scene background_forest with fade alice \"\u9b54\u6cd5\u306e\u68ee\u3078\u3088\u3046\u3053\u305d\uff01\" alice \"\u30b7\u30fc\u30f3\u306f\u30b9\u30e0\u30fc\u30ba\u306a\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u3067\u80cc\u666f\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\" jump continue_story label meet_characters: hide alice with fade show bob normal at left with fade bob \"\u3084\u3042\uff01\u50d5\u306f\u30dc\u30d6\u3001\u30a2\u30ea\u30b9\u306e\u53cb\u9054\u3060\u3088\u3002\" show alice happy at right with fade alice \"\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8868\u793a\u30fb\u975e\u8868\u793a\u3067\u304d\u307e\u3059\uff01\" jump continue_story label continue_story: narrator \"\u3053\u308c\u306f\u3042\u306a\u305f\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b8\u30e3\u30fc\u30cb\u30fc\u306e\u59cb\u307e\u308a\u306b\u904e\u304e\u307e\u305b\u3093\u3002\" narrator \"\u3088\u308a\u9ad8\u5ea6\u306a\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff01\" \u30b9\u30c6\u30c3\u30d7 4: \u30e1\u30a4\u30f3\u30b7\u30fc\u30f3\u306e\u4f5c\u6210 \u65b0\u3057\u3044\u30b7\u30fc\u30f3\u3092\u4f5c\u6210\uff08 Scene \u2192 New Scene \uff09 Control \u30ce\u30fc\u30c9\u3092\u30eb\u30fc\u30c8\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3001 Main.tscn \u3068\u3057\u3066\u4fdd\u5b58 Control\u30ce\u30fc\u30c9\u306b\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30bf\u30c3\u30c1\uff1a extends Control func _ready(): # Argode\u3092\u521d\u671f\u5316\u3057\u3066\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8aad\u307f\u8fbc\u307f if ArgodeSystem: ArgodeSystem.load_and_play_script(\"res://scenarios/story.rgd\", \"start\") else: print(\"ArgodeSystem\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\uff01\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\") \u30b9\u30c6\u30c3\u30d7 5: \u30e1\u30a4\u30f3\u30b7\u30fc\u30f3\u3068\u3057\u3066\u8a2d\u5b9a \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a \u306b\u79fb\u52d5 \u30e1\u30a4\u30f3\u30b7\u30fc\u30f3 \u3092\u4f5c\u6210\u3057\u305f Main.tscn \u306b\u8a2d\u5b9a F5 \u3092\u62bc\u3057\u3066\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u3092\u5b9f\u884c\uff01 \u5b8c\u6210\u3057\u305f\u3082\u306e \u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\u4ee5\u4e0b\u306e\u8981\u7d20\u3092\u542b\u3080\u5b8c\u5168\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff1a \u2705 \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u5b9a\u7fa9 \u540d\u524d\u3068\u8272\u4ed8\u304d \u2705 \u30c0\u30a4\u30a2\u30ed\u30b0\u30b7\u30b9\u30c6\u30e0 \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u30dd\u30fc\u30c8\u30ec\u30fc\u30c8\u4ed8\u304d \u2705 \u9078\u629e\u80a2\u30e1\u30cb\u30e5\u30fc \u30d7\u30ec\u30a4\u30e4\u30fc\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u7528 \u2705 \u30b7\u30fc\u30f3\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3 \u80cc\u666f\u5909\u66f4\u4ed8\u304d \u2705 \u5206\u5c90\u30ca\u30e9\u30c6\u30a3\u30d6 \u30e9\u30d9\u30eb\u3068\u30b8\u30e3\u30f3\u30d7\u4ed8\u304d \u6b21\u306e\u30b9\u30c6\u30c3\u30d7 \u3055\u3089\u306b\u6df1\u304f\u63a2\u6c42\u3059\u308b\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304b\uff1f\u3053\u308c\u3089\u306e\u30c8\u30d4\u30c3\u30af\u3092\u63a2\u7d22\u3057\u3066\u304f\u3060\u3055\u3044\uff1a \ud83c\udfa8 \u30d3\u30b8\u30e5\u30a2\u30eb\u5f37\u5316 \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306e\u8868\u60c5\u3068\u4f4d\u7f6e\u8a2d\u5b9a \u80cc\u666f\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u3068\u30a8\u30d5\u30a7\u30af\u30c8 \u30ab\u30b9\u30bf\u30e0UI\u30c6\u30fc\u30de \ud83c\udfaf \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u8ffd\u52a0 \u5909\u6570\u3068\u6761\u4ef6\u30ed\u30b8\u30c3\u30af \u30bb\u30fc\u30d6\u30fb\u30ed\u30fc\u30c9\u30b7\u30b9\u30c6\u30e0 \u30a8\u30d5\u30a7\u30af\u30c8\u7528\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9 \ud83d\udcda \u30b5\u30f3\u30d7\u30eb\u5b66\u7fd2 \u30b7\u30f3\u30d7\u30eb\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb \u9ad8\u5ea6\u306a\u6a5f\u80fd\u30c7\u30e2 \u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u30ac\u30a4\u30c9 \u30c8\u30e9\u30d6\u30eb\uff1f \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30ac\u30a4\u30c9 \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u304b\u3001Discord\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\uff01 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u8a73\u7d30\u3078\u7d9a\u304f \u2192 \u30b9\u30af\u30ea\u30d7\u30c8\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u898b\u308b \u2192","title":"Quick Start"},{"location":"ja/getting-started/quick-start/#_1","text":"\u308f\u305a\u304b\u6570\u5206\u3067Argode\u3092\u52d5\u304b\u3057\u307e\u3057\u3087\u3046\uff01\u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001\u6700\u521d\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b7\u30fc\u30f3\u306e\u4f5c\u6210\u65b9\u6cd5\u3092\u3054\u6848\u5185\u3057\u307e\u3059\u3002","title":"\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9"},{"location":"ja/getting-started/quick-start/#_2","text":"Godot Engine 4.0+ ( \u3053\u3061\u3089\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 ) Godot\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u7684\u306a\u77e5\u8b58","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"ja/getting-started/quick-start/#1-argode","text":"","title":"\u30b9\u30c6\u30c3\u30d7 1: Argode\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ja/getting-started/quick-start/#a-assetlib","text":"Godot Engine\u3092\u958b\u304f AssetLib \u30bf\u30d6\u306b\u79fb\u52d5 \"Argode\" \u3092\u691c\u7d22 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u3057\u3066 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u3092\u30af\u30ea\u30c3\u30af","title":"\u30aa\u30d7\u30b7\u30e7\u30f3 A: AssetLib\u304b\u3089\uff08\u63a8\u5968\uff09"},{"location":"ja/getting-started/quick-start/#b","text":"GitHub \u304b\u3089\u6700\u65b0\u30ea\u30ea\u30fc\u30b9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 addons/argode/ \u30d5\u30a9\u30eb\u30c0\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5c55\u958b \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a \u2192 \u30d7\u30e9\u30b0\u30a4\u30f3 \u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u6709\u52b9\u5316","title":"\u30aa\u30d7\u30b7\u30e7\u30f3 B: \u624b\u52d5\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ja/getting-started/quick-start/#2","text":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a \u3092\u958b\u304f\uff08 Project \u2192 Project Settings \uff09 \u30aa\u30fc\u30c8\u30ed\u30fc\u30c9 \u30bf\u30d6\u306b\u79fb\u52d5 ArgodeSystem \u3092\u8ffd\u52a0\uff1a \u30d1\u30b9 : res://addons/argode/core/ArgodeSystem.gd \u30ce\u30fc\u30c9\u540d : ArgodeSystem \u6709\u52b9 \u306b\u30c1\u30a7\u30c3\u30af","title":"\u30b9\u30c6\u30c3\u30d7 2: \u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u306e\u8a2d\u5b9a"},{"location":"ja/getting-started/quick-start/#3","text":"\u65b0\u3057\u3044\u30d5\u30a1\u30a4\u30eb scenarios/story.rgd \u3092\u4f5c\u6210\uff1a # story.rgd - \u3042\u306a\u305f\u306e\u6700\u521d\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b9\u30af\u30ea\u30d7\u30c8 # \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3092\u5b9a\u7fa9 character narrator \"\u30ca\u30ec\u30fc\u30bf\u30fc\" color=#ffffff character alice \"\u30a2\u30ea\u30b9\" color=#ff69b4 label start: narrator \"\u3042\u306a\u305f\u306e\u6700\u521d\u306eArgode\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u3078\u3088\u3046\u3053\u305d\uff01\" show alice happy at center with fade alice \"\u3053\u3093\u306b\u3061\u306f\uff01\u79c1\u306f\u30a2\u30ea\u30b9\u3001\u3053\u306e\u65b0\u3057\u3044\u4e16\u754c\u3078\u306e\u30ac\u30a4\u30c9\u3067\u3059\u3002\" alice \"\u307e\u305a\u4f55\u3092\u3057\u305f\u3044\u3067\u3059\u304b\uff1f\" menu: \"\u30b9\u30c8\u30fc\u30ea\u30fc\u306b\u3064\u3044\u3066\u5b66\u3076\": jump learn_story \"\u4e16\u754c\u3092\u63a2\u691c\u3059\u308b\": jump explore_world \"\u4ed6\u306e\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306b\u4f1a\u3046\": jump meet_characters label learn_story: alice \"\u3053\u3053\u304b\u3089\u3042\u306a\u305f\u306e\u7d20\u6674\u3089\u3057\u3044\u30b9\u30c8\u30fc\u30ea\u30fc\u304c\u59cb\u307e\u308a\u307e\u3059\uff01\" alice \"\u5206\u5c90\u30d1\u30b9\u3092\u6301\u3064\u8907\u96d1\u306a\u7269\u8a9e\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\" narrator \"'jump'\u3092\u4f7f\u3063\u3066\u30b9\u30c8\u30fc\u30ea\u30fc\u30bb\u30af\u30b7\u30e7\u30f3\u9593\u3092\u79fb\u52d5\u3057\u307e\u3059\u3002\" jump continue_story label explore_world: scene background_forest with fade alice \"\u9b54\u6cd5\u306e\u68ee\u3078\u3088\u3046\u3053\u305d\uff01\" alice \"\u30b7\u30fc\u30f3\u306f\u30b9\u30e0\u30fc\u30ba\u306a\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u3067\u80cc\u666f\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\" jump continue_story label meet_characters: hide alice with fade show bob normal at left with fade bob \"\u3084\u3042\uff01\u50d5\u306f\u30dc\u30d6\u3001\u30a2\u30ea\u30b9\u306e\u53cb\u9054\u3060\u3088\u3002\" show alice happy at right with fade alice \"\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8868\u793a\u30fb\u975e\u8868\u793a\u3067\u304d\u307e\u3059\uff01\" jump continue_story label continue_story: narrator \"\u3053\u308c\u306f\u3042\u306a\u305f\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u30b8\u30e3\u30fc\u30cb\u30fc\u306e\u59cb\u307e\u308a\u306b\u904e\u304e\u307e\u305b\u3093\u3002\" narrator \"\u3088\u308a\u9ad8\u5ea6\u306a\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff01\"","title":"\u30b9\u30c6\u30c3\u30d7 3: \u6700\u521d\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210"},{"location":"ja/getting-started/quick-start/#4","text":"\u65b0\u3057\u3044\u30b7\u30fc\u30f3\u3092\u4f5c\u6210\uff08 Scene \u2192 New Scene \uff09 Control \u30ce\u30fc\u30c9\u3092\u30eb\u30fc\u30c8\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3001 Main.tscn \u3068\u3057\u3066\u4fdd\u5b58 Control\u30ce\u30fc\u30c9\u306b\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30bf\u30c3\u30c1\uff1a extends Control func _ready(): # Argode\u3092\u521d\u671f\u5316\u3057\u3066\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8aad\u307f\u8fbc\u307f if ArgodeSystem: ArgodeSystem.load_and_play_script(\"res://scenarios/story.rgd\", \"start\") else: print(\"ArgodeSystem\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\uff01\u30aa\u30fc\u30c8\u30ed\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\")","title":"\u30b9\u30c6\u30c3\u30d7 4: \u30e1\u30a4\u30f3\u30b7\u30fc\u30f3\u306e\u4f5c\u6210"},{"location":"ja/getting-started/quick-start/#5","text":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a \u306b\u79fb\u52d5 \u30e1\u30a4\u30f3\u30b7\u30fc\u30f3 \u3092\u4f5c\u6210\u3057\u305f Main.tscn \u306b\u8a2d\u5b9a F5 \u3092\u62bc\u3057\u3066\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u3092\u5b9f\u884c\uff01","title":"\u30b9\u30c6\u30c3\u30d7 5: \u30e1\u30a4\u30f3\u30b7\u30fc\u30f3\u3068\u3057\u3066\u8a2d\u5b9a"},{"location":"ja/getting-started/quick-start/#_3","text":"\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\u4ee5\u4e0b\u306e\u8981\u7d20\u3092\u542b\u3080\u5b8c\u5168\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff1a \u2705 \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u5b9a\u7fa9 \u540d\u524d\u3068\u8272\u4ed8\u304d \u2705 \u30c0\u30a4\u30a2\u30ed\u30b0\u30b7\u30b9\u30c6\u30e0 \u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u30dd\u30fc\u30c8\u30ec\u30fc\u30c8\u4ed8\u304d \u2705 \u9078\u629e\u80a2\u30e1\u30cb\u30e5\u30fc \u30d7\u30ec\u30a4\u30e4\u30fc\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u7528 \u2705 \u30b7\u30fc\u30f3\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3 \u80cc\u666f\u5909\u66f4\u4ed8\u304d \u2705 \u5206\u5c90\u30ca\u30e9\u30c6\u30a3\u30d6 \u30e9\u30d9\u30eb\u3068\u30b8\u30e3\u30f3\u30d7\u4ed8\u304d","title":"\u5b8c\u6210\u3057\u305f\u3082\u306e"},{"location":"ja/getting-started/quick-start/#_4","text":"\u3055\u3089\u306b\u6df1\u304f\u63a2\u6c42\u3059\u308b\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304b\uff1f\u3053\u308c\u3089\u306e\u30c8\u30d4\u30c3\u30af\u3092\u63a2\u7d22\u3057\u3066\u304f\u3060\u3055\u3044\uff1a","title":"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7"},{"location":"ja/getting-started/quick-start/#_5","text":"\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306e\u8868\u60c5\u3068\u4f4d\u7f6e\u8a2d\u5b9a \u80cc\u666f\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u3068\u30a8\u30d5\u30a7\u30af\u30c8 \u30ab\u30b9\u30bf\u30e0UI\u30c6\u30fc\u30de","title":"\ud83c\udfa8 \u30d3\u30b8\u30e5\u30a2\u30eb\u5f37\u5316"},{"location":"ja/getting-started/quick-start/#_6","text":"\u5909\u6570\u3068\u6761\u4ef6\u30ed\u30b8\u30c3\u30af \u30bb\u30fc\u30d6\u30fb\u30ed\u30fc\u30c9\u30b7\u30b9\u30c6\u30e0 \u30a8\u30d5\u30a7\u30af\u30c8\u7528\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9","title":"\ud83c\udfaf \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u8ffd\u52a0"},{"location":"ja/getting-started/quick-start/#_7","text":"\u30b7\u30f3\u30d7\u30eb\u306a\u30d3\u30b8\u30e5\u30a2\u30eb\u30ce\u30d9\u30eb \u9ad8\u5ea6\u306a\u6a5f\u80fd\u30c7\u30e2 \u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u30ac\u30a4\u30c9 \u30c8\u30e9\u30d6\u30eb\uff1f \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30ac\u30a4\u30c9 \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u304b\u3001Discord\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u53c2\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\uff01 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u8a73\u7d30\u3078\u7d9a\u304f \u2192 \u30b9\u30af\u30ea\u30d7\u30c8\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u898b\u308b \u2192","title":"\ud83d\udcda \u30b5\u30f3\u30d7\u30eb\u5b66\u7fd2"}]}