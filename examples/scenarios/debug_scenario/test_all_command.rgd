label test_all_command:
	jump test_text_decoration

label commands:
	# すべてのコマンドをテストする
	"コマンドをテストするためのシナリオを開始します。"
	# ui show confirm z_index 100 with fade
	jump character_message

label character_message:
	akira "キャラクター定義したキャラクターでセリフを表示する"
	jump test_variable

label test_variable:
	set player.name = "テストキャラクター"
	akira "[player.name]さん、こんにちは！（アニメーション効果つき）"
	jump test_text_decoration
	
label test_text_decoration:
	akira "アニメーションをテストします。{animation=dramatic}カスタム\n設定{/animation}で表示しています。"
	akira "ルビのテストをします。【古今東西｜ここんとうざい】\nいかがですか？"
	akira "ルビの表示が正しく行われていますか？\n【古今東西｜ここんとうざい】を【旅｜たび】するのは【楽｜たの】しいですね。"
	akira "カラータグのテストです。{color=#ff0000}赤い文字{/color}と{color=blue}青い文字{/color}があります。"
	akira "サイズタグのテストです。{size=24}大きな文字{/size}と{size=12}小さな文字{/size}があります。"
	jump test_inline_wait

label test_inline_wait:
	"次のメッセージは1秒の待機を含みます。"
	akira "タグのテストもします。{w=1.0}\n1秒の待機が発生したはずです。"
	jump affection_menu

label affection_menu:
	"好感度メニューを表示します。"
	set player.affection = 0
	menu:
		"好感度を上げる":
			"好感度を上げます"
			set player.affection += 10
		"好感度を下げる":
			"好感度を下げます"
			set player.affection -= 10
	#いったんここで止めないといけない。
			
	akira "現在の好感度は[player.affection]です。"

	if player.affection > 0:
		akira "好感度が高いです！[player.affection]"
		jump high_affection
	elif player.affection < 0:
		akira "好感度が低いです。[player.affection]"
		jump low_affection
	else:
		akira "好感度が普通です。[player.affection]"
		jump normal_affection

label high_affection:
	akira "とても良い印象です。"
	"このキャラクターはあなたに好意を持っています。"
	call callable
	jump end
	
label low_affection:
	akira "悪い印象です"
	"このキャラクターはあなたに好意を持っていません。"
	call callable
	jump end

label normal_affection:
	akira "普通です"
	"このキャラクターはあなたに特別な感情を持っていません。"
	call callable
	jump end

label callable:
	akira "このキャラクターはあなたに呼びかけています。"
	set player.response = false
	menu:
		"応答する":
			akira "あなたは応答しました。"
			set player.response = true
		"無視する":
			akira "あなたは無視しました。"
			set player.response = false
	return

label end:
	akira "シナリオを終了します。"
	akira "テストが完了しました。"
	return